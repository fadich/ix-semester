{\rtf1\ansi\ansicpg1251\uc1\deff0\stshfdbch0\stshfloch0\stshfhich0\stshfbi0\deflang1049\deflangfe1049{\fonttbl{\f0\froman\fcharset204\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f2\fmodern\fcharset204\fprq1{\*\panose 02070309020205020404}Courier New;}{\f38\froman\fcharset0\fprq2 Times New Roman;}{\f36\froman\fcharset238\fprq2 Times New Roman CE;}{\f39\froman\fcharset161\fprq2 Times New Roman Greek;}
{\f40\froman\fcharset162\fprq2 Times New Roman Tur;}{\f41\froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f42\froman\fcharset178\fprq2 Times New Roman (Arabic);}{\f43\froman\fcharset186\fprq2 Times New Roman Baltic;}
{\f44\froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\f58\fmodern\fcharset0\fprq1 Courier New;}{\f56\fmodern\fcharset238\fprq1 Courier New CE;}{\f59\fmodern\fcharset161\fprq1 Courier New Greek;}{\f60\fmodern\fcharset162\fprq1 Courier New Tur;}
{\f61\fmodern\fcharset177\fprq1 Courier New (Hebrew);}{\f62\fmodern\fcharset178\fprq1 Courier New (Arabic);}{\f63\fmodern\fcharset186\fprq1 Courier New Baltic;}{\f64\fmodern\fcharset163\fprq1 Courier New (Vietnamese);}}{\colortbl;\red0\green0\blue0;
\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;
\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1049\langfe1049\cgrid\langnp1049\langfenp1049 \snext0 Normal;}
{\*\cs10 \additive \ssemihidden Default Paragraph Font;}{\*
\ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\trcbpat1\trcfpat1\tscellwidthfts0\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv 
\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1024\langfe1024\cgrid\langnp1024\langfenp1024 \snext11 \ssemihidden Normal Table;}{\s15\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 
\f2\fs20\lang1049\langfe1049\cgrid\langnp1049\langfenp1049 \sbasedon0 \snext15 Plain Text;}}{\*\latentstyles\lsdstimax156\lsdlockeddef0}{\*\rsidtbl \rsid1668093\rsid1714740\rsid3086045\rsid3869817\rsid5209206\rsid7278164}{\*\generator Microsoft Word 11.
0.5604;}{\info{\author MV}{\operator MV}{\creatim\yr2008\mo2\dy20\hr20\min37}{\revtim\yr2008\mo2\dy20\hr20\min37}{\version2}{\edmins1}{\nofpages16}{\nofwords5355}{\nofchars30527}{\*\company \'c2\'e8\'f8\'ed\'ff\'ea}{\nofcharsws35811}{\vern24689}}
\paperw11906\paperh16838\margl1152\margr1152\margt851\margb851 \deftab708\widowctrl\ftnbj\aenddoc\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\formshade\horzdoc\dgmargin\dghspace120\dgvspace180\dghorigin1152\dgvorigin851\dghshow2\dgvshow2
\jexpand\viewkind1\viewscale120\pgbrdrhead\pgbrdrfoot\splytwnine\ftnlytwnine\htmautsp\nolnhtadjtbl\useltbaln\alntblind\lytcalctblwd\lyttblrtgr\lnbrkrule\nobrkwrptbl\snaptogridincell\allowfieldendsel\wrppunct
\asianbrkrule\rsidroot1668093\newtblstyruls\nogrowautofit \fet0\sectd \psz9\linex0\headery567\footery567\colsx708\endnhere\sectlinegrid360\sectdefaultcl\sectrsid3229225\sftnbj {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl2
\pnucltr\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang {\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl6
\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang 
{\pntxtb (}{\pntxta )}}\pard\plain \s15\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid3229225 \f2\fs20\lang1049\langfe1049\cgrid\langnp1049\langfenp1049 {\insrsid3086045\charrsid3086045 
\par                \'ca\'ce\'cc\'c0\'cd\'c4\'c0 GOTO
\par      -----------------------------------------------------------------
\par 
\par           \'d1\'e5\'e9\'f7\'e0\'f1 \'e2\'fb \'f3\'e2\'e8\'e4\'e8\'f2\'e5 \'f0\'e5\'e0\'eb\'e8\'e7\'e0\'f6\'e8\'fe \'ee\'e4\'ed\'ee\'e9 \'e8\'e7 \'f1\'e0\'ec\'fb\'f5  \'ef\'f0\'ee\'f1\'f2\'fb\'f5 \'ea\'ee\'ec\'e0\'ed\'e4,
\par      \'ed\'ee \'e2 \'f2\'ee \'e6\'e5 \'e2\'f0\'e5\'ec\'ff \'e4\'ee\'e2\'ee\'eb\'fc\'ed\'ee \'f1\'eb\'ee\'e6\'ed\'ee\'e9 \'e4\'eb\'ff \'f0\'e0\'e7\'f0\'e0\'e1\'ee\'f2\'f7\'e8\'ea\'e0. \'c2 \'ff\'e7\'fb\'ea\'e5 BASIC
\par      \'ee\'f1\'ed\'ee\'e2\'ed\'ee\'e9 \'f4\'ee\'f0\'ec\'ee\'e9 \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'ed\'ee\'e3\'ee \'f3\'ef\'f0\'e0\'e2\'eb\'e5\'ed\'e8\'ff \'ff\'e2\'eb\'ff\'e5\'f2\'f1\'ff \'ea\'ee\'ec\'e0\'ed\'e4\'e0  GOTO. \'c2
\par      \'f1\'f2\'e0\'ed\'e4\'e0\'f0\'f2\'e5 \'ff\'e7\'fb\'ea\'e0 BASIC \'ee\'e1\'fa\'e5\'ea\'f2\'ee\'ec, \'ed\'e0 \'ea\'ee\'f2\'ee\'f0\'fb\'e9 \'e4\'ee\'eb\'e6\'e5\'ed \'f3\'ea\'e0\'e7\'fb\'e2\'e0\'f2\'fc GOTO,
\par      \'ff\'e2\'eb\'ff\'e5\'f2\'f1\'ff \'ed\'ee\'ec\'e5\'f0 \'f1\'f2\'f0\'ee\'ea\'e8.  \'dd\'f2\'ee\'f2 \'f2\'f0\'e0\'e4\'e8\'f6\'e8\'ee\'ed\'ed\'fb\'e9 \'ef\'ee\'e4\'f5\'ee\'e4 \'f1\'ee\'f5\'f0\'e0\'ed\'ff\'e5\'f2\'f1\'ff \'e8  \'e2
\par      \'ff\'e7\'fb\'ea\'e5  SMALL BASIC.  \'ce\'e4\'ed\'e0\'ea\'ee,  SMALL BASIC \'ed\'e5 \'f2\'f0\'e5\'e1\'f3\'e5\'f2\'f1\'ff \'ed\'f3\'ec\'e5\'f0\'ee\'e2\'e0\'f2\'fc
\par      \'ea\'e0\'e6\'e4\'f3\'fe \'f1\'f2\'f0\'ee\'ea\'f3.  \'cd\'ee\'ec\'e5\'f0 \'f1\'f2\'f0\'ee\'ea\'e8 \'ed\'e5\'ee\'e1\'f5\'ee\'e4\'e8\'ec \'f2\'ee\'eb\'fc\'ea\'ee \'e2 \'f2\'ee\'ec \'f1\'eb\'f3\'f7\'e0\'e5,  \'e5\'f1\'eb\'e8
\par      \'ed\'e0  \'ed\'e5\'e5  \'f1\'f1\'fb\'eb\'e0\'e5\'f2\'f1\'ff  \'ea\'ee\'ec\'e0\'ed\'e4\'e0  GOTO.  \'ce\'f1\'ed\'ee\'e2\'ed\'ee\'e9  \'f4\'ee\'f0\'ec\'e0\'f2 \'ea\'ee\'ec\'e0\'ed\'e4\'fb GOTO
\par      \'ef\'f0\'e5\'e4\'f1\'f2\'e0\'e2\'eb\'e5\'ed \'ed\'e8\'e6\'e5:
\par 
\par                           GOTO <\'ed\'ee\'ec\'e5\'f0 \'f1\'f2\'f0\'ee\'ea\'e8>
\par 
\par           \'ce\'f1\'ed\'ee\'e2\'ed\'ee\'e9 \'f1\'eb\'ee\'e6\'ed\'ee\'f1\'f2\'fc\'fe \'f0\'e5\'e0\'eb\'e8\'e7\'e0\'f6\'e8\'e8 \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'e0 GOTO  \'ff\'e2\'eb\'ff\'e5\'f2\'f1\'ff  \'f2\'ee,
\par      \'f7\'f2\'ee \'ee\'ed \'e4\'ee\'eb\'e6\'e5\'ed \'ef\'ee\'e7\'e2\'ee\'eb\'ff\'f2\'fc \'f1\'ee\'e2\'e5\'f0\'f8\'e0\'f2\'fc \'ef\'e5\'f0\'e5\'f5\'ee\'e4\'fb \'ea\'e0\'ea \'e2\'ed\'e8\'e7,  \'f2\'e0\'ea \'e8 \'e2\'e2\'e5\'f0\'f5
\par      \'ef\'ee  \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'e5.  \'c4\'eb\'ff  \'f3\'e4\'ee\'e2\'eb\'e5\'f2\'e2\'ee\'f0\'e5\'ed\'e8\'ff  \'fd\'f2\'ee\'e3\'ee  \'f2\'f0\'e5\'e1\'ee\'e2\'e0\'ed\'e8\'ff  \'ed\'e5\'ee\'e1\'f5\'ee\'e4\'e8\'ec
\par      \'ec\'e5\'f5\'e0\'ed\'e8\'e7\'ec, \'ea\'ee\'f2\'ee\'f0\'fb\'e9 \'e1\'fb \'ef\'f0\'ee\'f1\'ec\'e0\'f2\'f0\'e8\'e2\'e0\'eb \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'f3, \'e2\'fb\'e1\'e8\'f0\'e0\'eb \'ea\'e0\'e6\'e4\'f3\'fe \'ec\'e5\'f2\'ea\'f3
\par      \'e8 \'ef\'ee\'ec\'e5\'f9\'e0\'eb \'e5\'e5 \'e2 \'f2\'e0\'e1\'eb\'e8\'f6\'f3, \'f1\'ee\'e4\'e5\'f0\'e6\'e0\'f9\'f3\'fe \'ea\'e0\'ea \'e8\'ec\'ff \'ec\'e5\'f2\'ea\'e8 \'f2\'e0\'ea, \'e8 \'f3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'fc
\par      \'e5\'e5 \'f0\'e0\'e7\'ec\'e5\'f9\'e5\'ed\'e8\'ff \'e2 \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'e5. \'d2\'e0\'ea\'e0\'ff \'f2\'e0\'e1\'eb\'e8\'f6\'e0 \'ee\'ef\'f0\'e5\'e4\'e5\'eb\'e5\'ed\'e0 \'ed\'e8\'e6\'e5.
\par 
\par           }{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 struct label \{
\par             char name[LAB_LEN]; /* }{\insrsid3086045\charrsid3086045 \'e8\'ec\'ff}{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817  }{\insrsid3086045\charrsid3086045 \'ec\'e5\'f2\'ea\'e8}{
\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817  */
\par             }{\insrsid3086045\charrsid3086045 char *p; /* \'f3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'fc \'ed\'e0 \'ec\'e5\'f1\'f2\'ee \'f0\'e0\'e7\'ec\'e5\'f9\'e5\'ed\'e8\'ff \'e2 \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'e5 */
\par           }{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 \};
\par           struct label label_table[NUM_LAB];
\par 
\par           }{\insrsid3086045\charrsid3086045 \'d4\'f3\'ed\'ea\'f6\'e8\'ff, \'ea\'ee\'f2\'ee\'f0\'e0\'ff  \'ef\'f0\'ee\'f1\'ec\'e0\'f2\'f0\'e8\'e2\'e0\'e5\'f2  \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'f3 \'e8 \'e2\'fb\'e1\'e8\'f0\'e0\'e5\'f2 \'ea\'e0\'e6\'e4\'f3
\'fe
\par      \'ec\'e5\'f2\'ea\'f3 \'e4\'eb\'ff \'f0\'e0\'e7\'ec\'e5\'f9\'e5\'ed\'e8\'ff \'e5\'e5 \'e2 \'f2\'e0\'e1\'eb\'e8\'f6\'e5,  \'ed\'e0\'e7\'fb\'e2\'e0\'e5\'f2\'f1\'ff scan_labels(). \'ce\'ed\'e0
\par      \'e8 \'ee\'f1\'ed\'ee\'e2\'ed\'fb\'e5 \'ef\'ee\'e4\'e4\'e5\'f0\'e6\'e8\'e2\'e0\'fe\'f9\'e8\'e5 \'e5\'e5 \'f4\'f3\'ed\'ea\'f6\'e8\'e8 \'ef\'f0\'e8\'e2\'e5\'e4\'e5\'ed\'fb \'ed\'e8\'e6\'e5.
\par 
\par          /* \'cf\'ee\'e8\'f1\'ea \'e2\'f1\'e5\'f5 \'ec\'e5\'f2\'ee\'ea */
\par          }{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 void scan_labels()
\par          \{
\par            register int loc;
\par            char *temp;
\par 
\par            label_init();  /* }{\insrsid3086045\charrsid3086045 \'ee\'e1\'ed\'f3\'eb\'e5\'ed\'e8\'e5}{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817  }{\insrsid3086045\charrsid3086045 \'e2\'f1\'e5\'f5}{
\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817  }{\insrsid3086045\charrsid3086045 \'ec\'e5\'f2\'ee\'ea}{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817  */
\par            }{\insrsid3086045\charrsid3086045 temp = prog;   /* \'e7\'e0\'ef\'e8\'f1\'fc \'f3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'ff \'ed\'e0 \'ed\'e0\'f7\'e0\'eb\'ee \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'fb */
\par            /* \'c5\'f1\'eb\'e8 \'ef\'e5\'f0\'e2\'e0\'ff \'eb\'e5\'ea\'f1\'e5\'ec\'e0 \'f4\'e0\'e9\'eb\'e0 \'ff\'e2\'eb\'ff\'e5\'f2\'f1\'ff \'ec\'e5\'f2\'ea\'ee\'e9 */
\par            }{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 get_token();
\par            if(token_type==NUMBER) \{
\par              strcpy(label_table[0].name,token);
\par              label_table[0].p=prog;
\par            \}
\par 
\par            find_eol();
\par            do \{
\par              get_token();
\par              if(token_type==NUMBER) \{
\par                loc=get_next_label(token);
\par                if(loc == -1 || loc == -2) \{
\par                    (loc == -1) ? serror(5):serror(6);
\par                \}
\par                strcpy(label_table[loc].name, token);
\par            }{\insrsid3086045\charrsid3086045 label_table[loc].p = prog; /* \'f2\'e5\'ea\'f3\'f9\'e8\'e9 \'f3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'fc \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'fb*/
\par              \}
\par              /* \'c5\'f1\'eb\'e8 \'f1\'f2\'f0\'ee\'ea\'e0 \'ed\'e5 \'ef\'ee\'ec\'e5\'f7\'e5\'ed\'e0, \'ef\'e5\'f0\'e5\'f5\'ee\'e4 \'ea \'f1\'eb\'e5\'e4\'f3\'fe\'f9\'e5\'e9 */
\par              }{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 if(tok!=EOL) find_eol();
\par            }{\insrsid3086045\charrsid3086045 \} while(tok != FINISHED);
\par            prog = temp; /* \'e2\'ee\'f1\'f1\'f2\'e0\'ed\'ee\'e2\'e8\'f2\'fc \'ed\'e0\'f7\'e0\'eb\'fc\'ed\'ee\'e5 \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'e5*/
\par          \}
\par 
\par          /* \'c8\'ed\'e8\'f6\'e8\'e0\'eb\'e8\'e7\'e0\'f6\'e8\'ff \'ec\'e0\'f1\'f1\'e8\'e2\'e0 \'f5\'f0\'e0\'ed\'e5\'ed\'e8\'ff \'ec\'e5\'f2\'ee\'ea.
\par             \'cf\'ee \'f1\'ee\'e3\'eb\'e0\'f8\'e5\'ed\'e8\'fe \'e8\'ec\'ff \'ed\'f3\'eb\'e5\'e2\'ee\'e9 \'ec\'e5\'f2\'ea\'e8 \'f3\'ea\'e0\'e7\'fb\'e2\'e0\'e5\'f2, \'f7\'f2\'ee
\par             \'e4\'e0\'ed\'ed\'e0\'ff \'ef\'ee\'e7\'e8\'f6\'e8\'ff \'ec\'e0\'f1\'f1\'e8\'e2\'e0 \'ed\'e5 \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'f3\'e5\'f2\'f1\'ff  */
\par          }{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 void label_init()
\par          \{
\par            register int t;
\par            for(t=0;t<NUM_LAB;++t) lable_table[t].name[0]='\\0';
\par          }{\insrsid3086045\charrsid3086045 \}
\par          /* \'cf\'ee\'e8\'f1\'ea \'ed\'e0\'f7\'e0\'eb\'e0 \'f1\'eb\'e5\'e4\'f3\'fe\'f9\'e5\'e9 \'f1\'f2\'f0\'ee\'ea\'e8 */
\par          void find_eol()
\par          }{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 \{
\par            while (*prog!='\\n'  && *prog!='\\0') ++prog;
\par            }{\insrsid3086045\charrsid3086045 if (*prog) prog++;
\par          \}
\par 
\par          /* \'c2\'ee\'e7\'e2\'f0\'e0\'f9\'e0\'e5\'f2 \'e8\'ed\'e4\'e5\'ea\'f1 \'f1\'eb\'e5\'e4\'f3\'fe\'f9\'e5\'e9 \'f1\'e2\'ee\'e1\'ee\'e4\'ed\'ee\'e9 \'ef\'ee\'e7\'e8\'f6\'e8\'e8 \'e2 \'ec\'e0\'f1\'f1\'e8\'e2\'e5
\par             \'ec\'e5\'f2\'ee\'ea. \'c7\'ed\'e0\'f7\'e5\'ed\'e8\'e5 -1 \'f3\'ea\'e0\'e7\'fb\'e2\'e0\'e5\'f2 \'ed\'e0 \'ef\'e5\'f0\'e5\'ef\'ee\'eb\'ed\'e5\'ed\'e8\'e5 \'ec\'e0\'f1\'f1\'e8\'e2\'e0.
\par             \'c7\'ed\'e0\'f7\'e5\'ed\'e8\'e5 -2 \'f3\'ea\'e0\'e7\'fb\'e2\'e0\'e5\'f2 \'ed\'e0 \'e4\'f3\'e1\'eb\'e8\'f0\'ee\'e2\'e0\'ed\'e8\'e5 \'e8\'ec\'e5\'ed \'ec\'e5\'f2\'ee\'ea      */
\par          }{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 get_next_label(s)
\par          char *s;
\par          \{
\par            register int t;
\par 
\par            for (t=0;t<NUM_LAB;++t) \{
\par              if (label_table[t].name[0] == 0) return t;
\par              if(!strcmp(label_table[t].name,s)) return -2; /* }{\insrsid3086045\charrsid3086045 \'e4\'f3\'e1\'eb\'fc}{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817  */
\par            }{\insrsid3086045\charrsid3086045 \}
\par            return -1;
\par          \}
\par 
\par 
\par           \'d4\'f3\'ed\'ea\'f6\'e8\'ff scan_labels() \'f1\'ee\'ee\'e1\'f9\'e0\'e5\'f2 \'ee \'e4\'e2\'f3\'f5 \'f2\'e8\'ef\'e0\'f5 \'ee\'f8\'e8\'e1\'ee\'ea. \'cf\'e5\'f0\'e2\'fb\'e9 -
\par      \'fd\'f2\'ee \'e4\'f3\'e1\'eb\'e8\'f0\'f3\'fe\'f9\'e8\'e5 \'ec\'e5\'f2\'ea\'e8.  \'c2 \'ff\'e7\'fb\'ea\'e5 BASIC (\'ea\'e0\'ea \'e8 \'e2 \'e1\'ee\'eb\'fc\'f8\'e8\'ed\'f1\'f2\'e2\'e5 \'e4\'f0\'f3\'e3\'e8\'f5
\par      \'ff\'e7\'fb\'ea\'ee\'e2)  \'ed\'e5 \'ec\'ee\'e6\'e5\'f2 \'e1\'fb\'f2\'fc \'e4\'e2\'f3\'f5 \'ee\'e4\'e8\'ed\'e0\'ea\'ee\'e2\'fb\'f5 \'ec\'e5\'f2\'ee\'ea. \'c2\'f2\'ee\'f0\'ee\'e9 \'f2\'e8\'ef \'ee\'f8\'e8\'e1\'ea\'e8 -
\par      \'fd\'f2\'ee  \'ef\'e5\'f0\'e5\'ef\'ee\'eb\'ed\'e5\'ed\'e8\'e5  \'f2\'e0\'e1\'eb\'e8\'f6\'fb  \'ec\'e5\'f2\'ee\'ea.  \'d0\'e0\'e7\'ec\'e5\'f0  \'f2\'e0\'e1\'eb\'e8\'f6\'fb  \'ee\'ef\'f0\'e5\'e4\'e5\'eb\'e5\'ed  \'f1
\par      \'ef\'ee\'ec\'ee\'f9\'fc\'fe \'ec\'e0\'ea\'f0\'ee\'ee\'ef\'f0\'e5\'e4\'e5\'eb\'e5\'ed\'e8\'ff NUM_LAB. \'c2\'fb \'ec\'ee\'e6\'e5\'f2\'e5 \'e8\'e7\'ec\'e5\'ed\'e8\'f2\'fc \'e5\'e3\'ee \'e2 \'f2\'f3 \'e8\'eb\'e8
\par      \'e8\'ed\'f3\'fe \'f1\'f2\'ee\'f0\'ee\'ed\'f3.
\par 
\par           \'d2\'e0\'e1\'eb\'e8\'f6\'e0 \'ec\'e5\'f2\'ee\'ea \'f1\'f2\'f0\'ee\'e8\'f2\'f1\'ff \'ee\'e4\'e8\'ed \'f0\'e0\'e7,  \'e8 \'e2\'fb\'ef\'ee\'eb\'ed\'e5\'ed\'e8\'e5 \'ef\'e5\'f0\'e5\'f5\'ee\'e4\'e0 GOTO
\par      \'e2\'fb\'ef\'ee\'eb\'ed\'ff\'e5\'f2\'f1\'ff \'f1 \'ef\'ee\'ec\'ee\'f9\'fc\'fe \'f4\'f3\'ed\'ea\'f6\'e8\'e8 exec_goto(), \'ef\'f0\'e8\'e2\'e5\'e4\'e5\'ed\'ed\'ee\'e9 \'ed\'e8\'e6\'e5.
\par 
\par 
\par          /* \'d0\'e5\'e0\'eb\'e8\'e7\'e0\'f6\'e8\'ff \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'e0 GOTO */
\par          void exec_goto()
\par          \{
\par            char *loc;
\par 
\par            get_token(); /* \'ef\'ee\'eb\'f3\'f7\'e8\'f2\'fc \'ec\'e5\'f2\'ea\'f3 \'ef\'e5\'f0\'e5\'f5\'ee\'e4\'e0 */
\par            /* \'cf\'ee\'e8\'f1\'ea \'ec\'e5\'f1\'f2\'ee\'ef\'ee\'eb\'ee\'e6\'e5\'ed\'e8\'ff \'ec\'e5\'f2\'ea\'e8 \'e2 \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'e5*/
\par            }{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 loc = find_label(token);
\par            if (loc == '\\0')
\par              }{\insrsid3086045\charrsid3086045 serror(7);   /* \'cc\'e5\'f2\'ea\'e0 \'ed\'e5 \'ed\'e0\'e9\'e4\'e5\'ed\'e0  */
\par            else prog=loc; /*\'cf\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'e0 \'ed\'e0\'f7\'e0\'eb\'e0 \'e2\'fb\'ef\'ee\'eb\'ed\'ff\'f2\'f1\'ff \'ed\'e5 \'f1 \'ed\'e0\'f7\'e0\'eb\'e0*/
\par          \}
\par 
\par          /* \'cf\'ee\'e8\'f1\'ea \'ec\'e5\'f1\'f2\'ee\'ef\'ee\'eb\'ee\'e6\'e5\'ed\'e8\'ff \'ec\'e5\'f2\'ea\'e8. \'cd\'ee\'eb\'fc \'e2\'ee\'e7\'e2\'f0\'e0\'f9\'e0\'e5\'f2\'f1\'ff, \'e5\'f1\'eb\'e8 \'ec\'e5\'f2\'ea\'e0
\par             \'ed\'e5 \'ed\'e0\'e9\'e4\'e5\'ed\'e0; \'e2 \'ef\'f0\'ee\'f2\'e8\'e2\'ed\'ee\'ec \'f1\'eb\'f3\'f7\'e0\'e5 \'e2\'ee\'e7\'e2\'f0\'e0\'f9\'e0\'e5\'f2\'f1\'ff \'f3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'fc \'ed\'e0
\par             \'ec\'e5\'f1\'f2\'ee, \'e3\'e4\'e5 \'f0\'e0\'f1\'ef\'ee\'eb\'ee\'e6\'e5\'ed\'e0 \'ec\'e5\'f2\'ea\'e0                            */
\par 
\par          char *find_label(s)
\par          }{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 char *s;
\par          \{
\par          register int t;
\par 
\par          for (t=0;t<NUM_LAB;++t)
\par           if (!strcmp(label_tabel[t].name,s)) return label_tabel[t].p;
\par          }{\insrsid3086045\charrsid3086045 return '\\0';
\par          \}
\par 
\par           \'c2\'f1\'ef\'ee\'ec\'ee\'e3\'e0\'f2\'e5\'eb\'fc\'ed\'e0\'ff \'f4\'f3\'ed\'ea\'f6\'e8\'ff find_label(), \'ef\'ee\'eb\'f3\'f7\'e0\'ff \'ec\'e5\'f2\'ea\'f3, \'e8\'f9\'e5\'f2 \'e5\'e5
\par      \'e2  \'f2\'e0\'e1\'eb\'e8\'f6\'e5  \'ec\'e5\'f2\'ee\'ea  \'e8  \'e2\'ee\'e7\'e2\'f0\'e0\'f9\'e0\'e5\'f2 \'f3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'fc \'ed\'e0 \'ed\'e5\'e5.  \'c5\'f1\'eb\'e8 \'ec\'e5\'f2\'ea\'e0 \'ed\'e5
\par      \'ee\'e1\'ed\'e0\'f0\'f3\'e6\'e5\'ed\'e0,  \'e2\'ee\'e7\'e2\'f0\'e0\'f9\'e0\'e5\'f2, \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'e5 null. \'c5\'f1\'eb\'e8 \'e0\'e4\'f0\'e5\'f1 \'ed\'e5 null, \'f2\'ee \'ee\'ed
\par      \'ef\'f0\'e8\'f1\'e2\'e0\'e8\'e2\'e0\'e5\'f2\'f1\'ff   \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'ee\'e9  prog,  \'f7\'f2\'ee  \'e2\'fb\'e7\'fb\'e2\'e0\'e5\'f2  \'e2\'fb\'ef\'ee\'eb\'ed\'e5\'ed\'e8\'e5  \'f2\'ee\'e9
\par      \'f1\'f2\'f0\'ee\'ea\'e8,  \'ea\'ee\'f2\'ee\'f0\'e0\'ff  \'e1\'fb\'eb\'e0  \'ef\'ee\'ec\'e5\'f7\'e5\'ed\'e0  \'ec\'e5\'f2\'ea\'ee\'e9.  (\'cf\'ee\'ec\'ed\'e8\'f2\'e5  \'ee  \'f2\'ee\'ec,  \'f7\'f2\'ee
\par      \'f3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'fc  prog  \'ee\'ef\'e8\'f1\'fb\'e2\'e0\'e5\'f2  \'ef\'f3\'f2\'fc  \'e2\'fb\'ef\'ee\'eb\'ed\'e5\'ed\'e8\'ff \'f1\'f7\'e8\'f2\'e0\'ed\'ee\'e9 \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'fb).
\par      \'c5\'f1\'eb\'e8 \'f3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'fc \'ed\'e5 \'ee\'e1\'ed\'e0\'f0\'f3\'e6\'e5\'ed,  \'f2\'ee \'e2\'fb\'e4\'e0\'e5\'f2\'f1\'ff \'f1\'ee\'ee\'e1\'f9\'e5\'ed\'e8\'e5  \'ee  \'f2\'ee\'ec,  \'f7\'f2\'ee
\par      \'ec\'e5\'f2\'ea\'e0 \'ed\'e5\'ee\'ef\'f0\'e5\'e4\'e5\'eb\'e5\'ed\'e0.
\par 
\par 
\par 
\par                \'ce\'cf\'c5\'d0\'c0\'d2\'ce\'d0 IF
\par      -----------------------------------------------------------------
\par 
\par            \'c8\'ed\'f2\'e5\'f0\'ef\'f0\'e5\'f2\'e0\'f2\'ee\'f0 SMALL  BASIC  \'ee\'e1\'f0\'e0\'e1\'e0\'f2\'fb\'e2\'e0\'e5\'f2  \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0   IF   \'e2
\par      \'f1\'ee\'ee\'f2\'e2\'e5\'f2\'f1\'f2\'e2\'e8\'e8   \'f1\'ee   \'f1\'f2\'e0\'ed\'e4\'e0\'f0\'f2\'ee\'ec   \'ff\'e7\'fb\'ea\'e0   BASIC.  \'c2  SMALL  BASIC,
\par      \'ee\'f2\'f1\'f3\'f2\'f1\'f2\'e2\'f3\'e5\'f2 ELSE \'e8 \'ef\'ee\'e4\'e4\'e5\'f0\'e6\'e8\'e2\'e0\'e5\'f2\'f1\'ff \'f2\'ee\'eb\'fc\'ea\'ee \'f2\'f0\'e8  \'f3\'f1\'eb\'ee\'e2\'e8\'ff:  "\'e1\'ee\'eb\'fc\'f8\'e5",
\par      "\'ec\'e5\'ed\'fc\'f8\'e5" \'e8\'eb\'e8 "\'f0\'e0\'e2\'ed\'ee". (\'dd\'f2\'ee \'f1\'e4\'e5\'eb\'e0\'ed\'ee \'e4\'eb\'ff \'f2\'ee\'e3\'ee, \'f7\'f2\'ee\'e1\'fb \'e2\'fb \'ec\'ee\'e3\'eb\'e8 \'eb\'e5\'e3\'ea\'ee
\par      \'ef\'ee\'ed\'ff\'f2\'fc \'f0\'e0\'e1\'ee\'f2\'f3 \'fd\'f2\'ee\'e3\'ee \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'e0). \'ce\'f1\'ed\'ee\'e2\'ed\'ee\'e9 \'f4\'ee\'f0\'ec\'e0\'f2 \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'e0:
\par 
\par             IF <\'e2\'fb\'f0\'e0\'e6\'e5\'ed\'e8\'e5><\'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0><\'e2\'fb\'f0\'e0\'e6\'e5\'ed\'e8\'e5> THEN <\'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0>
\par 
\par           \'ce\'ef\'e5\'f0\'e0\'f2\'ee\'f0, \'f1\'f2\'ee\'ff\'f9\'e8\'e9  \'ef\'ee\'f1\'eb\'e5  THEN,  \'e2\'fb\'ef\'ee\'eb\'ed\'ff\'e5\'f2\'f1\'ff  \'f2\'ee\'eb\'fc\'ea\'ee  \'e2  \'f2\'ee\'ec
\par      \'f1\'eb\'f3\'f7\'e0\'e5,   \'e5\'f1\'eb\'e8  \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'e5  \'f1\'f0\'e0\'e2\'ed\'e5\'ed\'e8\'ff  \'ff\'e2\'eb\'ff\'e5\'f2\'f1\'ff  \'e8\'f1\'f2\'e8\'ed\'ed\'fb\'ec.  \'d4\'f3\'ed\'ea\'f6\'e8\'ff
\par      exec_if(),  \'ef\'f0\'e8\'e2\'e5\'e4\'e5\'ed\'ed\'e0\'ff \'ed\'e8\'e6\'e5,  \'ee\'e1\'e5\'f1\'ef\'e5\'f7\'e8\'e2\'e0\'e5\'f2 \'e2\'fb\'ef\'ee\'eb\'ed\'e5\'ed\'e8\'e5 \'fd\'f2\'ee\'e9 \'f4\'ee\'f0\'ec\'fb
\par      \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'e0 IF.
\par 
\par          /* \'cf\'f0\'ee\'f1\'f2\'e5\'e9\'f8\'e0\'ff \'f0\'e5\'e0\'eb\'e8\'e7\'e0\'f6\'e8\'ff \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'e0 IF  */
\par          }{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 void exec_if()
\par          \{
\par            int x , y, cond;
\par            }{\insrsid3086045\charrsid3086045 char op;
\par            get_exp(&x); /* \'ef\'ee\'eb\'f3\'f7\'e8\'f2\'fc \'eb\'e5\'e2\'ee\'e5 \'e2\'fb\'f0\'e0\'e6\'e5\'ed\'e8\'e5 */
\par            get_token(); /* \'ef\'ee\'eb\'f3\'f7\'e8\'f2\'fc \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0  */
\par            if (!strchr("=<>", *token)) \{
\par            serror(0);      /* \'ed\'e5\'e4\'ee\'ef\'f3\'f1\'f2\'e8\'ec\'fb\'e9 \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0  */
\par            return;
\par          \}
\par          op=*token;
\par          get_exp(&y);  /* \'ef\'ee\'eb\'f3\'f7\'e8\'f2\'fc \'ef\'f0\'e0\'e2\'ee\'e5 \'e2\'fb\'f0\'e0\'e6\'e5\'ed\'e8\'e5 */
\par          /* \'ce\'ef\'f0\'e5\'e4\'e5\'eb\'e5\'ed\'e8\'e5 \'f0\'e5\'e7\'f3\'eb\'fc\'f2\'e0\'f2\'e0 */
\par          cond=0;
\par          switch(op) \{
\par              }{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 case '=':
\par            if(x==y) cond=1;
\par            break;
\par              case '<':
\par            if(x<y) cond=1;
\par            break;
\par              case '>':
\par            if(x>y) cond=1;
\par            }{\insrsid3086045\charrsid3086045 break;
\par          \}
\par          if(cond) \{  /* \'e5\'f1\'eb\'e8 \'e8\'f1\'f2\'e8\'ed\'e0, \'f2\'ee \'ef\'ee\'e8\'f1\'ea \'ed\'f3\'e6\'ed\'ee\'e3\'ee IF  */
\par            }{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 get_token();
\par            if(tok!=THEN) \{
\par               }{\insrsid3086045\charrsid3086045 serror(8);
\par               return;
\par            \}  /* \'c2 \'ef\'f0\'ee\'f2\'e8\'e2\'ed\'ee\'ec \'f1\'eb\'f3\'f7\'e0\'e5 \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'e0 \'ef\'f0\'ee\'e4\'ee\'eb\'e6\'e0\'e5\'f2\'f1\'ff \'f1\'ee
\par                    \'f1\'eb\'e5\'e4\'f3\'fe\'f9\'e5\'e9 \'f1\'f2\'f0\'ee\'ea\'e8  */
\par          \}
\par          else find_eol(); /* \'ef\'ee\'e8\'f1\'ea \'f1\'f2\'f0\'ee\'ea\'e8 \'ef\'f0\'ee\'e4\'ee\'eb\'e6\'e5\'ed\'e8\'ff \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'fb */
\par        \}
\par 
\par           \'d4\'f3\'ed\'ea\'f6\'e8\'ff exec_if() \'e2\'fb\'ef\'ee\'eb\'ed\'ff\'e5\'f2\'f1\'ff \'f1\'eb\'e5\'e4\'f3\'fe\'f9\'e8\'ec \'ee\'e1\'f0\'e0\'e7\'ee\'ec:
\par          1. \'c2\'fb\'f7\'e8\'f1\'eb\'ff\'e5\'f2\'f1\'ff \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'e5 \'eb\'e5\'e2\'ee\'e3\'ee \'e2\'fb\'f0\'e0\'e6\'e5\'ed\'e8\'ff.
\par          2. \'d1\'f7\'e8\'f2\'fb\'e2\'e0\'e5\'f2\'f1\'ff \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0 \'f1\'f0\'e0\'e2\'ed\'e5\'ed\'e8\'ff.
\par          3. \'c2\'fb\'f7\'e8\'f1\'eb\'ff\'e5\'f2\'f1\'ff \'e2\'e5\'eb\'e8\'f7\'e8\'ed\'e0 \'ef\'f0\'e0\'e2\'ee\'e3\'ee \'e2\'fb\'f0\'e0\'e6\'e5\'ed\'ed\'e8\'ff.
\par          4. \'c2\'fb\'ef\'ee\'eb\'ed\'ff\'e5\'f2\'f1\'ff \'ee\'ef\'e5\'f0\'e0\'f6\'e8\'ff \'f1\'f0\'e0\'e2\'ed\'e5\'ed\'e8\'ff.
\par          5. \'c5\'f1\'eb\'e8 \'f3\'f1\'eb\'ee\'e2\'e8\'e5 \'ff\'e2\'eb\'ff\'e5\'f2\'f1\'ff \'e8\'f1\'f2\'e8\'ed\'ee\'e9, \'f2\'ee \'e2\'fb\'ef\'ee\'eb\'ed\'ff\'e5\'f2\'f1\'ff \'ef\'ee\'e8\'f1\'ea  THEN;
\par             \'e2  \'ef\'f0\'ee\'f2\'e8\'e2\'ed\'ee\'ec \'f1\'eb\'f3\'f7\'e0\'e5, find_eol  \'e2\'fb\'ef\'ee\'eb\'ed\'ff\'e5\'f2 \'ef\'e5\'f0\'e5\'f5\'ee\'e4 \'ed\'e0 \'ed\'e0\'f7\'e0\'eb\'ee
\par             \'f1\'eb\'e5\'e4\'f3\'fe\'f9\'e5\'e9 \'f1\'f2\'f0\'ee\'ea\'e8.
\par 
\par 
\par 
\par                \'d6\'c8\'ca\'cb FOR
\par      -----------------------------------------------------------------
\par 
\par           \'cf\'f0\'ee\'e1\'eb\'e5\'ec\'e0 \'ee\'e1\'f0\'e0\'e1\'ee\'f2\'ea\'e8  \'e8\'ed\'f2\'e5\'f0\'ef\'f0\'e5\'f2\'e0\'f2\'ee\'f0\'ee\'ec  \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'e0  \'f6\'e8\'ea\'eb\'e0   FOR,
\par      \'e2\'f5\'ee\'e4\'ff\'f9\'e5\'e3\'ee  \'e2  \'f1\'ee\'f1\'f2\'e0\'e2  \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'e0  BASIC,  \'f0\'e5\'f8\'e5\'ed\'e0  \'e2  \'ed\'e0\'f8\'e5\'ec  \'f1\'eb\'f3\'f7\'e0\'e5
\par      \'e4\'ee\'e2\'ee\'eb\'fc\'ed\'ee  \'ee\'f0\'e8\'e3\'e8\'ed\'e0\'eb\'fc\'ed\'ee.  \'ce\'f1\'ed\'ee\'e2\'ed\'ee\'e9  \'f4\'ee\'f0\'ec\'e0\'f2  \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'e0   \'f6\'e8\'ea\'eb\'e0   FOR
\par      \'f1\'eb\'e5\'e4\'f3\'fe\'f9\'e8\'e9:
\par 
\par       FOR<\'e8\'ec\'ff \'f3\'ef\'f0\'e0\'e2\'eb\'ff\'fe\'f9\'e5\'e9 \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'ee\'e9>=<\'ed\'e0\'f7. \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'e5>TO<\'ea\'ee\'ed. \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'e5>
\par           .
\par           .
\par           .
\par         \'ef\'ee\'f1\'eb\'e5\'e4\'ee\'e2\'e0\'f2\'e5\'eb\'fc\'ed\'ee\'f1\'f2\'fc \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'ee\'e2
\par           .
\par           .
\par           .
\par        NEXT
\par 
\par           \'c2\'e5\'f0\'f1\'e8\'ff \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'e0  FOR,  \'ef\'ee\'e4\'e4\'e5\'f0\'e6\'e8\'e2\'e0\'e5\'ec\'e0\'ff \'e8\'ed\'f2\'e5\'f0\'ef\'f0\'e5\'f2\'e0\'f2\'ee\'f0\'ee\'ec SMALL
\par      BASIC,  \'f0\'e5\'e0\'eb\'e8\'e7\'f3\'e5\'f2 \'f6\'e8\'ea\'eb \'f1 \'ef\'ee\'eb\'ee\'e6\'e8\'f2\'e5\'eb\'fc\'ed\'fb\'ec \'ef\'f0\'ee\'f0\'e0\'f9\'e5\'ed\'e8\'e5\'ec  \'f0\'e0\'e2\'ed\'fb\'ec  1  \'ed\'e0
\par      \'ea\'e0\'e6\'e4\'f3\'fe \'e8\'f2\'e5\'f0\'e0\'f6\'e8\'fe \'f6\'e8\'ea\'eb\'e0. \'cf\'e0\'f0\'e0\'ec\'e5\'f2\'f0 STEP \'ed\'e5 \'ef\'ee\'e4\'e4\'e5\'f0\'e6\'e8\'e2\'e0\'e5\'f2\'f1\'ff.
\par 
\par           \'c2 \'ff\'e7\'fb\'ea\'e5   BASIC,   \'f2\'ee\'f7\'ed\'ee  \'f2\'e0\'ea\'e6\'e5  \'ea\'e0\'ea  \'e8  \'e2  C\'e8,  \'e4\'ee\'ef\'f3\'f1\'ea\'e0\'e5\'f2\'f1\'ff
\par      \'e2\'eb\'ee\'e6\'e5\'ed\'ed\'ee\'f1\'f2\'fc \'f6\'e8\'ea\'eb\'e0 FOR.  \'ce\'f1\'ed\'ee\'e2\'ed\'ee\'e9 \'e8\'e7\'fe\'ec\'e8\'ed\'ea\'ee\'e9,  \'ef\'f0\'e8 \'f0\'e5\'e0\'eb\'e8\'e7\'e0\'f6\'e8\'e8 \'fd\'f2\'ee\'e3\'ee
\par      \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'e0,  \'f1  \'f2\'ee\'f7\'ea\'e8 \'e7\'f0\'e5\'ed\'e8\'ff \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'e8\'f1\'f2\'e0-\'ef\'f0\'ee\'f4\'e5\'f1\'f1\'e8\'ee\'ed\'e0\'eb\'e0,  \'ff\'e2\'eb\'ff\'e5\'f2\'f1\'ff
\par      \'f1\'ee\'f5\'f0\'e0\'ed\'e5\'ed\'e8\'e5 \'e8\'ed\'f4\'ee\'f0\'ec\'e0\'f6\'e8\'e8 \'ee \'ea\'e0\'e6\'e4\'ee\'ec  \'e2\'eb\'ee\'e6\'e5\'ed\'ed\'ee\'ec  \'f6\'e8\'ea\'eb\'e5  \'f1\'ee  \'f1\'f1\'fb\'eb\'ea\'ee\'e9  \'ed\'e0
\par      \'e2\'ed\'e5\'f8\'ed\'e8\'e9   \'f6\'e8\'ea\'eb.   \'c4\'eb\'ff  \'f0\'e5\'e0\'eb\'e8\'e7\'e0\'f6\'e8\'e8  \'fd\'f2\'ee\'e9  \'ec\'e0\'eb\'e5\'ed\'fc\'ea\'ee\'e9,  \'ed\'ee  \'e2\'f1\'e5-\'f2\'e0\'ea\'e8
\par      \'e7\'e0\'ea\'ee\'e2\'fb\'f0\'ea\'e8      (\'f2\'f0\'f3\'e4\'ed\'ee\'f1\'f2\'e8      \'e2\'f1\'e5\'e3\'e4\'e0      \'f0\'e0\'e4\'f3\'fe\'f2       \'ed\'e0\'f1\'f2\'ee\'ff\'f9\'e8\'f5
\par      \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'e8\'f1\'f2\'ee\'e2-\'ec\'f3\'e6\'f7\'e8\'ed),  \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'f3\'e5\'f2\'f1\'ff \'f1\'f2\'e5\'ea\'ee\'e2\'e0\'ff \'f1\'f2\'f0\'f3\'ea\'f2\'f3\'f0\'e0,  \'ea\'ee\'f2\'ee\'f0\'e0\'ff
\par      \'f0\'e0\'e1\'ee\'f2\'e0\'e5\'f2 \'f1\'eb\'e5\'e4\'f3\'fe\'f9\'e8\'ec \'ee\'e1\'f0\'e0\'e7\'ee\'ec:  \'cd\'e0\'f7\'e0\'eb\'ee \'f6\'e8\'ea\'eb\'e0,  \'e8\'ed\'f4\'ee\'f0\'ec\'e0\'f6\'e8\'ff \'ee \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'e8
\par      \'f3\'ef\'f0\'e0\'e2\'eb\'ff\'fe\'f9\'e5\'e9  \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'ee\'e9  \'f6\'e8\'ea\'eb\'e0  \'e8  \'e5\'e5 \'ea\'ee\'ed\'e5\'f7\'ed\'ee\'ec \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'e8,  \'e0 \'f2\'e0\'ea\'e6\'e5
\par      \'ec\'e5\'f1\'f2\'ee \'f0\'e0\'f1\'ef\'ee\'eb\'ee\'e6\'e5\'ed\'e8\'ff \'f6\'e8\'ea\'eb\'e0  \'e2  \'f2\'e5\'eb\'e5  \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'fb  \'e7\'e0\'ed\'ee\'f1\'ff\'f2\'f1\'ff  \'e2  \'f1\'f2\'e5\'ea.
\par      \'ca\'e0\'e6\'e4\'fb\'e9 \'f0\'e0\'e7,  \'ef\'f0\'e8 \'e4\'ee\'f1\'f2\'e8\'e6\'e5\'ed\'e8\'e8 \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'e0 NEXT,  \'e8\'e7 \'f1\'f2\'e5\'ea\'e0 \'e8\'e7\'e2\'eb\'e5\'ea\'e0\'e5\'f2\'f1\'ff
\par      \'e8\'ed\'f4\'ee\'f0\'ec\'e0\'f6\'e8\'ff \'ee \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'e8 \'f3\'ef\'f0\'e0\'e2\'eb\'ff\'fe\'f9\'e5\'e9 \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'ee\'e9,  \'e7\'e0\'f2\'e5\'ec \'e5\'e5  \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'e5
\par      \'ef\'e5\'f0\'e5\'f1\'f7\'e8\'f2\'fb\'e2\'e0\'e5\'f2\'f1\'ff  \'e8 \'f1\'f0\'e0\'e2\'ed\'e8\'e2\'e0\'e5\'f2\'f1\'ff \'f1 \'ea\'ee\'ed\'e5\'f7\'ed\'fb\'ec \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'e5\'ec \'f6\'e8\'ea\'eb\'e0.  \'c5\'f1\'eb\'e8
\par      \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'e5 \'f3\'ef\'f0\'e0\'e2\'eb\'ff\'fe\'f9\'e5\'e9 \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'ee\'e9 \'f6\'e8\'ea\'eb\'e0 \'e4\'ee\'f1\'f2\'e8\'e3\'eb\'ee  \'f1\'e2\'ee\'e5\'e3\'ee  \'ea\'ee\'ed\'e5\'f7\'ed\'ee\'e3\'ee
\par      \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'ff,  \'e2\'fb\'ef\'ee\'eb\'ed\'e5\'ed\'e8\'e5  \'f6\'e8\'ea\'eb\'e0  \'ef\'f0\'e5\'ea\'f0\'e0\'f9\'e0\'e5\'f2\'f1\'ff \'e8 \'e2\'fb\'ef\'ee\'eb\'ed\'ff\'e5\'f2\'f1\'ff \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0
\par      \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'fb \'f1\'eb\'e5\'e4\'f3\'fe\'f9\'e8\'e9 \'e7\'e0 \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'ee\'ec NEXT.  \'c2  \'ef\'f0\'ee\'f2\'e8\'e2\'ed\'ee\'ec  \'f1\'eb\'f3\'f7\'e0\'e5,  \'e2
\par      \'f1\'f2\'e5\'ea  \'e7\'e0\'ed\'ee\'f1\'e8\'f2\'f1\'ff  \'ed\'ee\'e2\'e0\'ff \'e8\'ed\'f4\'ee\'f0\'ec\'e0\'f6\'e8\'ff \'e8 \'e2\'fb\'ef\'ee\'eb\'ed\'e5\'ed\'e8\'e5 \'f6\'e8\'ea\'eb\'e0 \'ed\'e0\'f7\'e8\'ed\'e0\'e5\'f2\'f1\'ff \'f1
\par      \'e5\'e3\'ee \'ed\'e0\'f7\'e0\'eb\'e0.  \'d2\'e0\'ea\'e8\'ec  \'e6\'e5  \'ee\'e1\'f0\'e0\'e7\'ee\'ec  \'ee\'e1\'e5\'f1\'ef\'e5\'f7\'e8\'e2\'e0\'e5\'f2\'f1\'ff  \'e8\'ed\'f2\'e5\'f0\'ef\'f0\'e5\'f2\'e0\'f6\'e8\'ff  \'e8
\par      \'e2\'fb\'ef\'ee\'eb\'ed\'e5\'ed\'e8\'e5 \'e2\'eb\'ee\'e6\'e5\'ed\'ed\'fb\'f5 \'f6\'e8\'ea\'eb\'ee\'e2.  \'c2 \'f1\'f2\'e5\'ea\'ee\'ef\'ee\'e4\'ee\'e1\'ed\'ee\'e9 \'f1\'f2\'f0\'f3\'ea\'f2\'f3\'f0\'e5 \'e2\'eb\'ee\'e6\'e5\'ed\'ed\'fb\'f5
\par      \'f6\'e8\'ea\'eb\'ee\'e2 \'ea\'e0\'e6\'e4\'fb\'e9 FOR \'e4\'ee\'eb\'e6\'e5\'ed \'e1\'fb\'f2\'fc \'e7\'e0\'ea\'f0\'fb\'f2  \'f1\'ee\'ee\'f2\'e2\'e5\'f2\'f1\'f2\'e2\'f3\'fe\'f9\'e8\'ec  \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'ee\'ec
\par      NEXT.
\par 
\par           \'c4\'eb\'ff  \'f0\'e5\'e0\'eb\'e8\'e7\'e0\'f6\'e8\'e8  \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'e0  \'f6\'e8\'ea\'eb\'e0  FOR   \'f1\'f2\'e5\'ea  \'e4\'ee\'eb\'e6\'e5\'ed  \'e8\'ec\'e5\'f2\'fc
\par      \'f1\'eb\'e5\'e4\'f3\'fe\'f9\'f3\'fe \'f1\'f2\'f0\'f3\'ea\'f2\'f3\'f0\'f3:
\par 
\par           struct for_stack \{
\par                int var; /* \'f1\'f7\'e5\'f2\'f7\'e8\'ea \'f6\'e8\'ea\'eb\'e0 */
\par                int target; /* \'ea\'ee\'ed\'e5\'f7\'ed\'ee\'e5 \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'e5 */
\par                }{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 char *loc;
\par           \} fstack[FOR_NEST]; /* }{\insrsid3086045\charrsid3086045 \'f1\'f2\'e5\'ea}{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817  }{\insrsid3086045\charrsid3086045 \'e4\'eb\'ff}{
\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817  }{\insrsid3086045\charrsid3086045 \'f6\'e8\'ea\'eb\'e0}{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817  FOR/NEXT */
\par           }{\insrsid3086045\charrsid3086045 int ftos; /* \'e8\'ed\'e4\'e5\'ea\'f1 \'ed\'e0\'f7\'e0\'eb\'e0 \'f1\'f2\'e5\'ea\'e0 FOR */
\par 
\par           \'c7\'ed\'e0\'f7\'e5\'ed\'e8\'e5 \'ec\'e0\'ea\'f0\'ee\'f1\'e0  FOR_NEST  \'ee\'e3\'f0\'e0\'ed\'e8\'f7\'e8\'e2\'e0\'e5\'f2 \'f3\'f0\'ee\'e2\'e5\'ed\'fc \'e2\'eb\'ee\'e6\'e5\'ed\'ed\'ee\'f1\'f2\'e8
\par      \'f6\'e8\'ea\'eb\'e0.  (\'cf\'ee  \'f3\'ec\'ee\'eb\'f7\'e0\'ed\'e8\'fe  \'e4\'ee\'ef\'f3\'f1\'ea\'e0\'e5\'f2\'f1\'ff  25   \'f3\'f0\'ee\'e2\'ed\'e5\'e9   \'e2\'eb\'ee\'e6\'e5\'ed\'ed\'ee\'f1\'f2\'e8).
\par      \'cf\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'e0\'ff ftos \'e2\'f1\'e5\'e3\'e4\'e0 \'e8\'ec\'e5\'e5\'f2 \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'e5 \'e8\'ed\'e4\'e5\'ea\'f1\'e0 \'ed\'e0\'f7\'e0\'eb\'e0 \'f1\'f2\'e5\'ea\'e0.
\par 
\par           \'c4\'eb\'ff \'ee\'e1\'f0\'e0\'e1\'ee\'f2\'ea\'e8  \'f1\'f2\'e5\'ea\'e0  \'e2\'e0\'ec  \'ef\'ee\'ed\'e0\'e4\'ee\'e1\'ff\'f2\'f1\'ff \'e4\'e2\'e5 \'f4\'f3\'ed\'ea\'f6\'e8\'e8 fpush() \'e8
\par      fpop(), \'ea\'ee\'f2\'ee\'f0\'fb\'e5 \'ef\'f0\'e8\'e2\'e5\'e4\'e5\'ed\'fb \'ed\'e8\'e6\'e5.
\par 
\par                 /* \'cf\'ee\'ec\'e5\'f1\'f2\'e8\'f2\'fc \'fd\'eb\'e5\'ec\'e5\'ed\'f2 \'e2 \'f1\'f2\'e5\'ea */
\par           }{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 void fpush(i)
\par           struct for_stack i;
\par           \{
\par                if (ftos > FOR_NEST)
\par                     serror(10);
\par 
\par                fstack[ftos]=i;
\par                ftos++;
\par           \}
\par 
\par           struct for_stack fpop()
\par           \{
\par                ftos--;
\par                if (ftos < 0) serror(11);
\par                return(fstack[ftos]);
\par           }{\insrsid3086045\charrsid3086045 \}
\par 
\par 
\par           \'c8\'f2\'e0\'ea, \'ef\'ee\'f1\'eb\'e5  \'f2\'ee\'e3\'ee,  \'ea\'e0\'ea \'e2\'fb \'ef\'ee\'eb\'f3\'f7\'e8\'eb\'e8 \'e2\'ee\'e7\'ec\'ee\'e6\'ed\'ee\'f1\'f2\'fc \'ee\'e7\'ed\'e0\'ea\'ee\'ec\'e8\'f2\'fc\'f1\'ff
\par      \'f1\'ee \'e2\'f1\'e5\'ec\'e8 \'ed\'e5\'ee\'e1\'f5\'ee\'e4\'e8\'ec\'fb\'ec\'e8 \'e2\'f1\'ef\'ee\'ec\'ee\'e3\'e0\'f2\'e5\'eb\'fc\'ed\'fb\'ec\'e8 \'f4\'f3\'ed\'ea\'f6\'ec\'ff\'ec\'e8, \'ef\'f0\'e8\'e2\'e5\'e4\'e5\'ec \'ef\'ee\'eb\'ed\'fb\'e9
\par      \'f2\'e5\'ea\'f1\'f2 \'f4\'f3\'ed\'ea\'f6\'e8\'e8, \'f0\'e5\'e0\'eb\'e8\'e7\'f3\'fe\'f9\'e5\'e9 \'ee\'ef\'e5\'f0\'e0\'f2\'f0\'fb FOR \'e8 NEXT.
\par 
\par 
\par           /* \'cf\'f0\'ee\'f1\'f2\'e5\'e9\'f8\'e0\'ff \'f0\'e5\'e0\'eb\'e8\'e7\'e0\'f6\'e8\'ff \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'e0 \'f6\'e8\'ea\'eb\'e0 FOR */
\par           }{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 void exec_for()
\par           \{
\par                struct for_stack i;
\par                }{\insrsid3086045\charrsid3086045 int value;
\par 
\par                get_token(); /* \'f7\'f2\'e5\'ed\'e8\'e5 \'f3\'ef\'f0\'e0\'e2\'eb\'ff\'fe\'f9\'e5\'e9 \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'ee\'e9 */
\par                }{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 if (!isalfa(*token)) \{
\par                     serror(4);
\par                     return;
\par                }{\insrsid3086045\charrsid3086045 \}
\par 
\par                i.var=toupper(token) - 'A'; /* \'f1\'ee\'f5\'f0\'e0\'ed\'e8\'ec \'e8\'ed\'e4\'e5\'ea\'f1 */
\par 
\par                get_token(); /* \'f7\'f2\'e5\'ed\'e8\'e5 \'f1\'e8\'ec\'e2\'ee\'eb\'e0 \'f0\'e0\'e2\'e5\'ed\'f1\'f2\'e2\'e0 */
\par                }{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 if (*token != '=') \{
\par                serror(3);
\par                }{\insrsid3086045\charrsid3086045 return;
\par                \}
\par 
\par                get_exp(&value); /* \'ef\'ee\'eb\'f3\'f7\'e8\'f2\'fc \'ed\'e0\'f7\'e0\'eb\'fc\'ed\'ee\'e5 \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'e5 */
\par 
\par                }{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 variables[i.var] = value;
\par 
\par                get_token();
\par                if (tok != TO) serror(9); /* }{\insrsid3086045\charrsid3086045 \'f7\'f2\'e5\'ed\'e8\'e5}{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817  }{\insrsid3086045\charrsid3086045 \'e8}{
\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817  }{\insrsid3086045\charrsid3086045 \'e0\'ed\'e0\'eb\'e8\'e7}{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817  TO */
\par 
\par                }{\insrsid3086045\charrsid3086045 get_exp(&i.target); /* \'ef\'ee\'eb\'f3\'f7\'e8\'f2\'fc \'ea\'ee\'ed\'e5\'f7\'ed\'ee\'e5 \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'e5 */
\par 
\par      /* \'c5\'f1\'eb\'e8 \'f6\'e8\'ea\'eb \'e2\'fb\'ef\'ee\'eb\'ed\'ff\'e5\'f2\'f1\'ff \'ef\'ee\'f1\'eb\'e5\'e4\'ed\'e8\'e9 \'f0\'e0\'e7, \'ef\'ee\'ec\'e5\'f1\'f2\'e8\'f2\'fc \'e8\'ed\'f4\'ee\'f0\'ec\'e0\'f6\'e8\'fe
\par         \'e2}{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817  }{\insrsid3086045\charrsid3086045 \'f1\'f2\'e5\'ea}{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 */
\par                if (value >= variables[i.var]) \{
\par                     i.loc = prog;
\par                     fpush(i);
\par                }{\insrsid3086045\charrsid3086045 \}
\par                else \{ /* \'ef\'f0\'ee\'ef\'f3\'f1\'f2\'e8\'f2\'fc \'e2\'e5\'f1\'fc \'f6\'e8\'ea\'eb \'f6\'e5\'eb\'e8\'ea\'ee\'ec */
\par                     }{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 while(tok != NEXT) get_token();
\par                }{\insrsid3086045\charrsid3086045 \}
\par              \}
\par 
\par       /* \'c2\'fb\'ef\'ee\'eb\'ed\'e5\'ed\'e8\'e5 \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'e0 NEXT */
\par           void next()
\par           \{
\par               struct for_stack i;
\par 
\par               i = fpop(); /* \'f7\'f2\'e5\'ed\'e8\'e5 \'e8\'ed\'f4\'ee\'f0\'ec\'e0\'f6\'e8\'e8 \'ee \'f6\'e8\'ea\'eb\'e5 */
\par 
\par               variables[i.var]++; /* \'f3\'e2\'e5\'eb\'e8\'f7\'e5\'ed\'e8\'e5 \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'ee\'e9 \'f6\'e8\'ea\'eb\'e0 */
\par               }{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 if (variables[i.var] > i.target) return; /* }{\insrsid3086045\charrsid3086045 \'ea\'ee\'ed\'e5\'f6}{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817  */
\par               }{\insrsid3086045\charrsid3086045 fpush(i); /* \'e2 \'ef\'f0\'ee\'f2\'e8\'e2\'ed\'ee\'ec \'f1\'eb\'f3\'f7\'e0\'e5 \'e7\'e0\'ef\'ee\'ec\'ed\'e8\'f2\'fc \'e8\'ed\'f4\'ee\'f0\'ec\'e0\'f6\'e8\'fe */
\par               prog = i.loc; /* \'f6\'e8\'ea\'eb */
\par           \}
\par 
\par 
\par           \'ca\'e0\'ea \'e8\'ec\'e5\'ed\'ed\'ee  \'f0\'e0\'e1\'ee\'f2\'e0\'e5\'f2  \'fd\'f2\'e0  \'ef\'ee\'e4\'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'e0,  \'e2\'ef\'ee\'eb\'ed\'e5   \'ff\'f1\'ed\'ee   \'e8\'e7
\par      \'ea\'ee\'ec\'ec\'e5\'ed\'f2\'e0\'f0\'e8\'e5\'e2 \'ea \'ed\'e5\'e9.  \'d1\'eb\'e5\'e4\'f3\'e5\'f2 \'e7\'e0\'ec\'e5\'f2\'e8\'f2\'fc,  \'f7\'f2\'ee \'e0\'ed\'e0\'eb\'e8\'e7 \'ed\'e0 \'e2\'ee\'e7\'ec\'ee\'e6\'ed\'ee\'f1\'f2\'fc
\par      \'e2\'fb\'f5\'ee\'e4\'e0  \'e8\'e7  \'f6\'e8\'ea\'eb\'e0  \'ef\'ee  \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'f3  GOTO   \'e2   \'e4\'e0\'ed\'ed\'ee\'ec   \'f1\'eb\'f3\'f7\'e0\'e5   \'ed\'e5
\par      \'e2\'fb\'ef\'ee\'eb\'ed\'ff\'e5\'f2\'f1\'ff. \'cf\'ee\'fd\'f2\'ee\'ec\'f3   \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'ed\'e8\'e5  GOTO  \'e2  \'f2\'e5\'eb\'e5  \'f6\'e8\'ea\'eb\'e0  \'ec\'ee\'e6\'e5\'f2
\par      \'ef\'f0\'e8\'e2\'e5\'f1\'f2\'e8  \'ea  \'e8\'f1\'ea\'e0\'e6\'e5\'ed\'e8\'fe  \'f1\'ee\'e4\'e5\'f0\'e6\'e8\'ec\'ee\'e3\'ee  \'f1\'f2\'e5\'ea\'e0,  \'f7\'f2\'ee   \'e2\'ee\'e1\'f9\'e5\'ec-\'f2\'ee   \'ed\'e5
\par      \'e6\'e5\'eb\'e0\'f2\'e5\'eb\'fc\'ed\'ee.
\par 
\par           \'d0\'e5\'f8\'e5\'ed\'e8\'e5 \'ef\'f0\'ee\'e1\'eb\'e5\'ec\'fb  \'f0\'e5\'e0\'eb\'e8\'e7\'e0\'f6\'e8\'e8  \'f6\'e8\'ea\'eb\'e0 FOR \'f1 \'ef\'ee\'ec\'ee\'f9\'fc\'fe \'ef\'f0\'e8\'ec\'e5\'ed\'e5\'ed\'e8\'ff
\par      \'f1\'f2\'e5\'ea\'ee\'e2\'fb\'f5  \'f1\'f2\'f0\'f3\'ea\'f2\'f3\'f0  \'ff\'e2\'eb\'ff\'e5\'f2\'f1\'ff,  \'e2  \'ee\'e1\'f9\'e5\'ec  \'f1\'eb\'f3\'f7\'e0\'e5,   \'f2\'e8\'ef\'e8\'f7\'ed\'fb\'ec   \'e4\'eb\'ff
\par      \'f0\'e5\'e0\'eb\'e8\'e7\'e0\'f6\'e8\'e8  \'f6\'e8\'ea\'eb\'e8\'f7\'e5\'f1\'ea\'e8\'f5 \'ea\'ee\'ed\'f1\'f2\'f0\'f3\'ea\'f6\'e8\'e9.  \'d2\'e0\'ea \'ea\'e0\'ea \'e8\'ed\'f2\'e5\'f0\'ef\'f0\'e5\'f2\'e0\'f2\'ee\'f0 SMALL
\par      BASIC \'ed\'e5 \'ef\'ee\'e4\'e4\'e5\'f0\'e6\'e8\'e2\'e0\'e5\'f2 \'e4\'f0\'f3\'e3\'e8\'e5 \'f2\'e8\'ef\'fb \'f6\'e8\'ea\'eb\'e8\'f7\'e5\'f1\'ea\'e8\'f5 \'ea\'ee\'ed\'f1\'f2\'f0\'f3\'ea\'f6\'e8\'e9,  \'f2\'ee \'e2\'fb
\par      \'ec\'ee\'e6\'e5\'f2\'e5  \'f1\'e0\'ec\'ee\'f1\'f2\'ee\'ff\'f2\'e5\'eb\'fc\'ed\'ee \'f0\'e0\'e7\'f0\'e0\'e1\'ee\'f2\'e0\'f2\'fc \'ef\'ee\'e4\'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'fb \'f0\'e5\'e0\'eb\'e8\'e7\'e0\'f6\'e8\'e8 \'f6\'e8\'ea\'eb\'ee\'e2
\par      WHILE \'e8 DO-WHILE.  \'ca\'e0\'ea \'e2\'fb \'f1\'ec\'ee\'e6\'e5\'f2\'e5 \'f3\'e2\'e8\'e4\'e5\'f2\'fc \'e2 \'f1\'eb\'e5\'e4\'f3\'fe\'f9\'e5\'ec  \'ef\'e0\'f0\'e0\'e3\'f0\'e0\'f4\'e5,
\par      \'f1\'f2\'e5\'ea\'ee\'e2\'fb\'e5   \'f1\'f2\'f0\'f3\'ea\'f2\'f3\'f0\'fb   \'e8\'ef\'ee\'eb\'fc\'e7\'f3\'fe\'f2\'f1\'ff   \'ef\'f0\'e8   \'f0\'e5\'e0\'eb\'e8\'e7\'e0\'f6\'e8\'e8   \'e8  \'e4\'f0\'f3\'e3\'e8\'f5
\par      \'ea\'ee\'ed\'f1\'f2\'f0\'f3\'ea\'f6\'e8\'e9 \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'e8\'f0\'ee\'e2\'e0\'ed\'e8\'ff, \'e4\'ee\'ef\'f3\'f1\'ea\'e0\'fe\'f9\'e8\'f5 \'e2\'eb\'ee\'e6\'e5\'ed\'ed\'ee\'f1\'f2\'fc.
\par 
\par 
\par 
\par                \'ce\'cf\'c5\'d0\'c0\'d2\'ce\'d0 GOSUB.
\par      -----------------------------------------------------------------
\par 
\par           \'d5\'ee\'f2\'ff BASIC   \'ed\'e5   \'ef\'ee\'e4\'e4\'e5\'f0\'e6\'e8\'e2\'e0\'e5\'f2  \'ee\'f2\'e4\'e5\'eb\'fc\'ed\'fb\'e5  \'ef\'ee\'e4\'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'fb,  \'ed\'ee
\par      \'e8\'ec\'e5\'e5\'f2\'f1\'ff \'e2\'ee\'e7\'ec\'ee\'e6\'ed\'ee\'f1\'f2\'fc \'e2\'fb\'e7\'e2\'e0\'f2\'fc \'ee\'f2\'e4\'e5\'eb\'fc\'ed\'fb\'e5 \'f7\'e0\'f1\'f2\'e8 \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'fb  \'f1  \'ef\'ee\'ec\'ee\'f9\'fc\'fe
\par      \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'e0  GOSUB  \'e8  \'e2\'e5\'f0\'ed\'f3\'f2\'f1\'ff  \'e8\'e7 \'ed\'e5\'e5 \'f1 \'ef\'ee\'ec\'ee\'f9\'fc\'fe \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'e0 RETURN.
\par      \'ce\'f1\'ed\'ee\'e2\'ed\'ee\'e9 \'f4\'ee\'f0\'ec\'ee\'e9 GOSUB-RETURN \'ff\'e2\'eb\'ff\'e5\'f2\'f1\'ff \'f1\'eb\'e5\'e4\'f3\'fe\'f9\'e0\'ff:
\par 
\par      GOSUB <\'ed\'ee\'ec\'e5\'f0 \'f1\'f2\'f0\'ee\'ea\'e8>
\par              .
\par              .
\par              .
\par              <\'ed\'ee\'ec\'e5\'f0 \'f1\'f2\'f0\'ee\'ea\'e8>
\par              .
\par              \'f2\'e5\'eb\'ee \'ef\'ee\'e4\'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'fb
\par              .
\par              .
\par      RETURN
\par 
\par           \'c2\'fb\'e7\'ee\'e2 \'ef\'ee\'e4\'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'fb  \'f2\'f0\'e5\'e1\'f3\'e5\'f2  \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'ed\'e8\'ff \'f1\'f2\'e5\'ea\'e0.  \'ce\'f7\'e5\'e2\'e8\'e4\'ed\'ee,
\par      \'f7\'f2\'ee \'fd\'f2\'ee \'f0\'e5\'e0\'eb\'e8\'e7\'ee\'e2\'e0\'f2\'fc \'e2 \'e4\'e0\'ed\'ed\'ee\'ec \'f1\'eb\'f3\'f7\'e0\'e5 \'ef\'f0\'ee\'f9\'e5,  \'f7\'e5\'ec \'e4\'eb\'ff \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'e0 FOR
\par      \'ef\'ee\'f2\'ee\'ec\'f3,  \'f7\'f2\'ee  \'ea\'e0\'e6\'e4\'ee\'ec\'f3  \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'f3 RETURN \'f1\'ee\'ee\'f2\'e2\'e5\'f2\'f1\'f2\'e2\'f3\'e5\'f2 \'f1\'e2\'ee\'e9 GOSUB.
\par      \'ce\'ef\'e8\'f1\'e0\'ed\'e8\'e5 \'f1\'f2\'e5\'ea\'e0 GOSUB \'ef\'ee\'ea\'e0\'e7\'e0\'ed\'ee \'ed\'e8\'e6\'e5.
\par 
\par          char *gstack[SUB_NEST]; /* \'f1\'f2\'e5\'ea \'ef\'ee\'e4\'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec */
\par          int gtos; /* \'e8\'ed\'e4\'e5\'ea\'f1 \'e2\'e5\'f0\'f5\'ed\'e5\'e9 \'f7\'e0\'f1\'f2\'e8 \'f1\'f2\'e5\'ea\'e0  */
\par 
\par           \'d4\'f3\'ed\'ea\'f6\'e8\'ff gosub() \'e8 \'e2\'f1\'ef\'ee\'ec\'ee\'e3\'e0\'f2\'e5\'eb\'fc\'ed\'fb\'e5 \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'fb \'ef\'f0\'e8\'e2\'e5\'e4\'e5\'ed\'fb \'ed\'e8\'e6\'e5.
\par 
\par          /* \'cf\'f0\'ee\'f1\'f2\'e5\'e9\'f8\'e0\'ff \'f0\'e5\'e0\'eb\'e8\'e7\'e0\'f6\'e8\'ff \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'e0 GOSUB  */
\par          void gosub()
\par          \{
\par            char *loc;
\par 
\par            get_token();
\par            /* \'ef\'ee\'e8\'f1\'ea \'ec\'e5\'f2\'ea\'e8 \'ee\'e1\'f0\'e0\'f9\'e5\'ed\'e8\'ff */
\par            }{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 loc = find_label(token);
\par            if(loc=='\\0')
\par              }{\insrsid3086045\charrsid3086045 serror(7); /* \'ec\'e5\'f2\'ea\'e0 \'ed\'e5 \'ed\'e0\'e9\'e4\'e5\'ed\'e0 */
\par            else \{
\par              gpush(prog); /* \'e7\'e0\'ef\'ee\'ec\'ed\'e8\'ec \'ec\'e5\'f1\'f2\'ee, \'ea\'f3\'e4\'e0 \'ed\'e0\'e4\'ee \'e2\'e5\'f0\'ed\'f3\'f2\'fc\'f1\'ff */
\par              prog = loc; /* \'f1\'f2\'e0\'f0\'f2 \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'fb \'f1 \'f2\'ee\'f7\'ea\'e8 loc */
\par            \}
\par          \}
\par 
\par          /*  \'c2\'ee\'e7\'e2\'f0\'e0\'f2 \'e8\'e7 \'ef\'ee\'e4\'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'fb */
\par          void greturn()
\par          \{
\par            prog = gpop();
\par          \}
\par 
\par          /* \'cf\'ee\'ec\'e5\'f1\'f2\'e8\'f2\'fc \'fd\'eb\'e5\'ec\'e5\'ed\'f2 \'e2 \'f1\'f2\'e5\'ea \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'ee\'e2 GOSUB (\'ef\'ee\'e4\'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec) */
\par          }{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 void gpush(s)
\par          char *s;
\par          \{
\par            gtos++;
\par            if(gtos == SUB_NEST) \{
\par              serror(12);
\par              return;
\par            }{\insrsid3086045\charrsid3086045 \}
\par            gstack[gtos]=s;
\par          \}
\par 
\par       /* \'c2\'fb\'f2\'ee\'eb\'ea\'ed\'f3\'f2\'fc \'fd\'eb\'e5\'ec\'e5\'ed\'f2 \'e8\'e7 \'f1\'f2\'e5\'ea\'e0 \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'ee\'e2 GOSUB (\'ef\'ee\'e4\'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec) */
\par          }{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 char *gpop()
\par          \{
\par            if(gtos==0) \{
\par              serror(13);
\par              }{\insrsid3086045\charrsid3086045 return;
\par            \}
\par            return(gstack[gtos--]);
\par          \}
\par 
\par           \'ca\'ee\'ec\'e0\'ed\'e4\'e0 GOSUB  \'f0\'e0\'e1\'ee\'f2\'e0\'e5\'f2 \'f1\'eb\'e5\'e4\'f3\'fe\'f9\'e8\'ec \'ee\'e1\'f0\'e0\'e7\'ee\'ec.  \'d2\'e5\'ea\'f3\'f9\'e5\'e5 \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'e5
\par      prog \'ef\'ee\'ec\'e5\'f9\'e0\'e5\'f2\'f1\'ff \'e2 \'f1\'f2\'e5\'ea  GOSUB.  \'c7\'e0\'f2\'e5\'ec  prog  \'ef\'f0\'e8\'f1\'e2\'e0\'e8\'e2\'e0\'e5\'f2\'f1\'ff  \'e0\'e4\'f0\'e5\'f1
\par      \'f1\'f2\'f0\'ee\'ea\'e8,   \'f1   \'ea\'ee\'f2\'ee\'f0\'ee\'e9   \'ed\'e0\'f7\'e8\'ed\'e0\'e5\'f2\'f1\'ff   \'ef\'ee\'e4\'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'e0,  \'e8  \'ed\'e0\'f7\'e8\'ed\'e0\'e5\'f2\'f1\'ff
\par      \'e2\'fb\'ef\'ee\'eb\'ed\'e5\'ed\'e8\'e5 \'ef\'ee\'e4\'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'fb. \'ca\'ee\'e3\'e4\'e0 \'e2\'f1\'f2\'f0\'e5\'f7\'e0\'e5\'f2\'f1\'ff RETURN, \'e8\'e7 \'f1\'f2\'e5\'ea\'e0 GOSUB
\par      \'e2\'fb\'f2\'e0\'eb\'ea\'e8\'e2\'e0\'e5\'f2\'f1\'ff  \'ee\'f7\'e5\'f0\'e5\'e4\'ed\'ee\'e5  \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'e5  \'e8  \'ef\'f0\'e8\'f1\'e2\'e0\'e8\'e2\'e0\'e5\'f2\'f1\'ff prog.  \'c4\'e0\'eb\'e5\'e5
\par      \'e2\'fb\'ef\'ee\'eb\'ed\'e5\'ed\'e8\'e5  \'ef\'f0\'ee\'e4\'ee\'eb\'e6\'e0\'e5\'f2\'f1\'ff  \'f1\'ee  \'f1\'eb\'e5\'e4\'f3\'fe\'f9\'e5\'e9  \'f1\'f2\'f0\'ee\'ea\'e8  \'ef\'ee\'f1\'eb\'e5  \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'e0
\par      GOSUB. \'ce\'ef\'e5\'f0\'e0\'f2\'ee\'f0 GOSUB \'e4\'ee\'ef\'f3\'f1\'ea\'e0\'e5\'f2 \'e2\'eb\'ee\'e6\'e5\'ed\'ed\'ee\'f1\'f2\'fc.
\par 
\par 
\par 
\par                         \'cf\'ce\'cb\'cd\'db\'c9 \'d4\'c0\'c9\'cb \'c8\'cd\'d2\'c5\'d0\'cf\'d0\'c5\'d2\'c0\'d2\'ce\'d0\'c0.
\par      -----------------------------------------------------------------
\par 
\par            \'c2\'f1\'e5 \'f2\'e5\'ea\'f1\'f2\'fb SMALL  BASIC,  \'e8\'f1\'ea\'eb\'fe\'f7\'e0\'ff  \'f2\'e5\'ea\'f1\'f2\'fb  \'f1\'e8\'ed\'f2\'e0\'ea\'f1\'e8\'f7\'e5\'f1\'ea\'ee\'e3\'ee
\par      \'e0\'ed\'e0\'eb\'e8\'e7\'e0\'f2\'ee\'f0\'e0    \'e2\'fb\'f0\'e0\'e6\'e5\'ed\'e8\'e9,    \'ef\'f0\'e8\'e2\'e5\'e4\'e5\'ed\'fb   \'ed\'e8\'e6\'e5.   \'c2\'e0\'ec   \'ed\'e5\'ee\'e1\'f5\'ee\'e4\'e8\'ec\'ee
\par      \'ee\'f2\'ea\'ee\'ec\'ef\'e8\'eb\'e8\'f0\'ee\'e2\'e0\'f2\'fc  \'f4\'e0\'e9\'eb\'fb  \'e8\'ed\'f2\'e5\'f0\'ef\'f0\'e5\'f2\'e0\'f2\'ee\'f0\'e0  \'e8  \'e0\'ed\'e0\'eb\'e8\'e7\'e0\'f2\'ee\'f0\'e0,  \'e0  \'e7\'e0\'f2\'e5\'ec
\par      \'ee\'f2\'f0\'e5\'e4\'e0\'ea\'f2\'e8\'f0\'ee\'e2\'e0\'f2\'fc \'e8\'f5.
\par 
\par         /* \'cc\'e8\'ed\'e8\'ec\'e0\'eb\'fc\'ed\'fb\'e9 BASIC-\'e8\'ed\'f2\'e5\'ef\'f0\'e5\'f2\'e0\'f2\'ee\'f0 */
\par         }{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 #include "stdio.h"
\par         #include "setjmp.h"
\par         #include "math.h"
\par         #include "ctype.h"
\par         #include "stdlib.h"
\par 
\par         #define NUM_LAB 100
\par         #define LAB_LEN 10
\par         #define FOR_NEST 25
\par         #define SUB_NEST 25
\par         #define PROG_SIZE 10000
\par 
\par         #define DELIMITER 1
\par         #define VARIABLE  2
\par         #define NUMBER    3
\par         #define COMMAND   4
\par         #define STRING    5
\par         #define QUOTE     6
\par 
\par         #define PRINT 1
\par         #define INPUT 2
\par         #define IF    3
\par         #define THEN  4
\par         #define FOR   5
\par         #define NEXT  6
\par         #define TO    7
\par         #define GOTO  8
\par         #define EOL   9
\par         #define FINISHED 10
\par         #define GOSUB 11
\par         #define RETURN 12
\par         #define END   13
\par 
\par         }{\insrsid3086045\charrsid3086045 char *prog; /* \'f1\'ee\'e4\'e5\'f0\'e6\'e8\'f2 \'e2\'fb\'f0\'e0\'e6\'e5\'ed\'e8\'e5 \'e4\'eb\'ff \'e0\'ed\'e0\'eb\'e8\'e7\'e0 */
\par         jmp_buf e_buf; /* \'f1\'ee\'e4\'e5\'f0\'e6\'e8\'f2 \'f1\'f0\'f2\'e5\'e4\'f3 \'e4\'eb\'ff longjmp() */
\par 
\par         int variables[26]= \{   /* 26 \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'fb\'f5 \'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'f2\'e5\'eb\'ff A - Z */
\par           0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
\par           0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
\par           0, 0, 0, 0, 0, 0
\par         \};
\par 
\par           struct commands \{ /* \'cf\'f0\'ee\'f1\'ec\'ee\'f2\'f0 \'f2\'e0\'e1\'eb\'e8\'f6\'fb \'ea\'eb\'fe\'f7\'e5\'e2\'fb\'f5 \'f1\'eb\'ee\'e2 */
\par             char command[20];
\par             char tok;
\par           \} table[] = \{ /* \'ca\'ee\'ec\'e0\'ed\'e4\'e0 \'e4\'ee\'eb\'e6\'ed\'e0 \'e2\'e2\'ee\'e4\'e8\'f2\'f1\'ff \'ef\'f0\'ee\'ef\'e8\'f1\'ed\'fb\'ec\'e8 */
\par             "print",PRINT, /* \'e1\'f3\'ea\'e2\'e0\'ec\'e8 \'e2 \'fd\'f2\'f3 \'f2\'e0\'e1\'eb\'e8\'f6\'f3 */
\par             }{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 "input",INPUT,
\par             "if",IF,
\par             "then",THEN,
\par             "goto",GOTO,
\par             "for",FOR,
\par             "next",NEXT,
\par             "to",TO,
\par             "gosub",GOSUB,
\par             "return",RETURN,
\par             "end",END,
\par             "",END  /* }{\insrsid3086045\charrsid3086045 \'cc\'e0\'f0\'ea\'e5\'f0}{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817  }{\insrsid3086045\charrsid3086045 \'ea\'ee\'ed\'f6\'e0}{
\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817  }{\insrsid3086045\charrsid3086045 \'f2\'e0\'e1\'eb\'e8\'f6\'fb}{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817  */
\par           \};
\par 
\par           char token[80];
\par           char token_type, tok;
\par 
\par           struct label \{
\par             char name[LAB_LEN];
\par             char *p; /*      */
\par           \};
\par           struct label label_table[NUM_LAB];
\par 
\par           char *find_label(), *gpop();
\par 
\par           struct for_stack \{
\par             }{\insrsid3086045\charrsid3086045 int var; /* \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'e0\'ff \'f1\'f7\'e5\'f2\'f7\'e8\'ea\'e0 */
\par             int target; /* \'ea\'ee\'ed\'e5\'f7\'ed\'ee\'e5 \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'e5 */
\par             }{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 char *loc;
\par           \} fstack[FOR_NEST]; /* }{\insrsid3086045\charrsid3086045 \'f1\'f2\'e5\'ea}{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817  }{\insrsid3086045\charrsid3086045 \'f6\'e8\'ea\'eb\'e0}{
\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817  FOR/NEXT */
\par           struct for_stack fpop();
\par 
\par           char *gstack[SUB_NEST]; /* }{\insrsid3086045\charrsid3086045 \'f1\'f2\'e5\'ea}{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817  }{\insrsid3086045\charrsid3086045 \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'e0}{
\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817  GOSUB */
\par           }{\insrsid3086045\charrsid3086045 int ftos; /* \'e8\'ed\'e4\'e5\'ea\'f1 \'ed\'e0\'f7\'e0\'eb\'e0 \'f1\'f2\'e5\'ea\'e0 FOR */
\par           int gtos; /* \'e8\'ed\'e4\'e5\'ea\'f1 \'ed\'e0\'f7\'e0\'eb\'e0 \'f1\'f2\'e5\'ea\'e0 GOSUB */
\par 
\par           }{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 void print(), scan_labels(), find_eol(),exec_goto();
\par           void exec_if(), exec_for(), next(), fpush(), input();
\par           void gosub(), greturn(), gpush(), label_init();
\par 
\par           main(argc, argv)
\par           int argc;
\par           char *argv[];
\par           \{
\par             char in[80];
\par             int answer;
\par             char *p_buf;
\par             char *t;
\par 
\par             if(argc!=2) \{
\par               printf("}{\insrsid3086045\charrsid3086045 \'c8\'f1\'ef\'ee\'eb\'fc\'e7\'f3\'e9\'f2\'e5}{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817  }{\insrsid3086045\charrsid3086045 \'f4\'ee\'f0\'ec\'e0\'f2}{
\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 : run <filename>\\n");
\par               }{\insrsid3086045\charrsid3086045 exit(1);
\par             \}
\par 
\par             /* \'c2\'fb\'e4\'e5\'eb\'e5\'ed\'e8\'e5 \'ef\'e0\'ec\'ff\'f2\'e8 \'e4\'eb\'ff \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'fb */
\par             }{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 if (!(p_buf=(char *) malloc(PROG_SIZE))) \{
\par               }{\insrsid3086045\charrsid3086045 printf("\'ce\'f8\'e8\'e1\'ea\'e0 \'ef\'f0\'e8 \'e2\'fb\'e4\'e5\'eb\'e5\'ed\'e8\'e8 \'ef\'e0\'ec\'ff\'f2\'e8 ");
\par               exit(1);
\par             \}
\par 
\par             /* \'c7\'e0\'e3\'f0\'f3\'e7\'ea\'e0 \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'fb \'e4\'eb\'ff \'e2\'fb\'ef\'ee\'eb\'ed\'e5\'ed\'e8\'ff */
\par             }{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 if(!load_program(p_buf,argv[1])) exit(1);
\par             if(setjmp(e_buf)) exit(1); /* }{\insrsid3086045\charrsid3086045 \'e8\'ed\'e8\'f6\'e8\'e0\'eb\'e8\'e7\'e0\'f6\'e8\'ff}{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817  }{\insrsid3086045\charrsid3086045 \'e1\'f3\'f4\'e5\'f0\'e0}{
\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 
\par                                           }{\insrsid3086045\charrsid3086045 \'ed\'e5\'eb\'ee\'ea\'e0\'eb\'fc\'ed\'fb\'f5 \'ef\'e5\'f0\'e5\'f5\'ee\'e4\'ee\'e2 */
\par             prog = p_buf;
\par             scan_labels(); /* \'ef\'ee\'e8\'f1\'ea \'ec\'e5\'f2\'ea\'e8 \'e2 \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'e5 */
\par             ftos = 0; /* \'e8\'ed\'e8\'f6\'e8\'e0\'eb\'e8\'e7\'e0\'f6\'e8\'ff \'e8\'ed\'e4\'e5\'f1\'e0 \'f1\'f2\'e5\'ea\'e0 FOR */
\par             gtos = 0; /* \'e8\'ed\'e8\'f6\'e8\'e0\'eb\'e8\'e7\'e0\'f6\'e8\'ff \'e8\'ed\'e4\'e5\'f1\'e0 \'f1\'f2\'e5\'ea\'e0 GOSUB */
\par            }{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 do \{
\par              token_type = get_token();
\par              }{\insrsid3086045\charrsid3086045 /* \'ef\'f0\'ee\'e2\'e5\'f0\'ea\'e0 \'ed\'e0 \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0 \'ef\'f0\'e8\'f1\'e2\'e0\'e8\'e2\'e0\'ed\'e8\'ff */
\par              if(token_type==VARIABLE) \{
\par                putback(); /* \'e2\'ee\'e7\'e2\'f0\'e0\'f2 \'ef\'e5\'f0. \'ee\'e1\'f0\'e0\'f2\'ed\'ee \'e2\'ee \'e2\'f5\'ee\'e4\'ed\'ee\'e9 \'ef\'ee\'f2\'ee\'ea */
\par                assignment(); /* \'e4\'ee\'eb\'e6\'e5\'ed \'e1\'fb\'f2\'fc \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0 \'ef\'f0\'e8\'f1\'e2\'e0\'e8\'e2\'e0\'ed\'e8\'ff */
\par              \}
\par              else /* \'fd\'f2\'ee \'ea\'ee\'ec\'e0\'ed\'e4\'e0 */
\par                switch(tok) \{
\par                  }{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 case PRINT:
\par                    print();
\par                    break;
\par                  case GOTO:
\par                    exec_if();
\par                    break;
\par                  case FOR:
\par                    exec_for();
\par                    break;
\par                  case NEXT:
\par                    next();
\par                    break;
\par                  case INPUT:
\par                    input();
\par                    break;
\par                  case GOSUB:
\par                    gosub();
\par                    break;
\par                  case RETURN:
\par                    greturn();
\par                    break;
\par                  case END:
\par                    exit(0);
\par                \}
\par            \} while (tok != FINISHED);
\par          \}
\par 
\par          /* }{\insrsid3086045\charrsid3086045 \'c7\'e0\'e3\'f0\'f3\'e7\'ea\'e0}{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817  }{\insrsid3086045\charrsid3086045 \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'fb}{
\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 . */
\par          load_program(p, fname)
\par          char *p;
\par          char *fname;
\par          \{
\par            FILE *fp;
\par            int i=0;
\par            if(!(fp=fopen(fname, "rb"))) return 0;
\par 
\par            i = 0;
\par              do \{
\par                 *p = getc(fp);
\par                 p++; i++;
\par              \} while(!feof(fp) && i<PROG_SIZE);
\par              }{\insrsid3086045\charrsid3086045 *(p-2) = '\\0'; /* \'f1\'e8\'ec\'e2\'ee\'eb \'ea\'ee\'ed\'f6\'e0 \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'fb */
\par              fclose(fp);
\par              return 1;
\par            \}
\par 
\par            /* \'cf\'f0\'e8\'f1\'e2\'e0\'e8\'e2\'e0\'ed\'e8\'e5 \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'ee\'e9 \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'ff */
\par            assigment()
\par            \{
\par              int var, value;
\par              /* \'cf\'ee\'eb\'f3\'f7\'e8\'f2\'fc \'e8\'ec\'ff \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'ee\'e9 */
\par              }{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 get_token();
\par                if(!isalpha(*token)) \{
\par                  }{\insrsid3086045\charrsid3086045 serror(4); /* \'fd\'f2\'ee \'ed\'e5 \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'e0\'ff */
\par                  return;
\par                \}
\par 
\par                /* \'e2\'fb\'f7\'e8\'f1\'eb\'e5\'ed\'e8\'e5 \'e8\'ed\'e4\'e5\'ea\'f1\'e0 \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'ee\'e9 */
\par                var = toupper(*token)-'A';
\par 
\par                /* \'ef\'ee\'eb\'f3\'f7\'e8\'f2\'fc \'e7\'ed\'e0\'ea \'f0\'e0\'e2\'e5\'ed\'f1\'f2\'e2\'e0 */
\par                get_token();
\par                }{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 if(*token!='=') \{
\par                  serror(3);
\par                  }{\insrsid3086045\charrsid3086045 return;
\par                \}
\par 
\par                /* \'ef\'ee\'eb\'f3\'f7\'e8\'f2\'fc \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'e5, \'ef\'f0\'e8\'f1\'e2\'e0\'e5\'ec\'ee\'e5 \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'ee\'e9 */
\par                get_exp(&value);
\par 
\par                /* \'ef\'f0\'e8\'f1\'e2\'ee\'e8\'f2\'fc \'fd\'f2\'ee \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'e5 */
\par                variables[var] = value;
\par              \}
\par --------------------------------------------------------------------
\par              /* \'cf\'f0\'ee\'f1\'f2\'e5\'e9\'f8\'e0\'ff \'f0\'e5\'e0\'eb\'e8\'e7\'e0\'f6\'e8\'ff \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'e0 PRINT */
\par              void print()
\par -----------------------------------------------------------------
\par              /* \'cf\'f0\'ee\'f1\'f2\'e5\'e9\'f8\'e0\'ff \'f0\'e5\'e0\'eb\'e8\'e7\'e0\'f6\'e8\'ff \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'e0 PRINT */
\par              }{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 void print()
\par              \{
\par                int answer;
\par                int len=0, spaces;
\par                }{\insrsid3086045\charrsid3086045 char last_delim;
\par 
\par                do \{
\par                  get_token(); /* \'ef\'ee\'eb\'f3\'f7\'e8\'f2\'fc \'f1\'eb\'e5\'e4\'f3\'fe\'f9\'e8\'e9 \'fd\'eb\'e5\'ec\'e5\'ed\'f2 \'f1\'ef\'e8\'f1\'ea\'e0  */
\par                  }{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 if(tok==EOL || tok==FINISHED) break;
\par                  if(token_type==QUOTE) \{ /* }{\insrsid3086045\charrsid3086045 \'fd\'f2\'ee}{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817  }{\insrsid3086045\charrsid3086045 \'f1\'f2\'f0\'ee\'ea\'e0}{
\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817  */
\par                    print(token);
\par                    len += strlen(token);
\par                    }{\insrsid3086045\charrsid3086045 get_token();
\par                  \}
\par                  else \{ /* \'fd\'f2\'ee \'e2\'fb\'f0\'e0\'e6\'e5\'ed\'e8\'e5 */
\par                    }{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 putback();
\par                    get_exp(&answer);
\par                    get_token();
\par                    len +=printf("%d", answer);
\par                  \}
\par                  last_delim = *token;
\par 
\par                  }{\insrsid3086045\charrsid3086045 if(*token==';') \{
\par      /* \'e2\'fb\'f7\'e8\'f1\'eb\'e5\'ed\'e8\'e5 \'f7\'e8\'f1\'eb\'e0 \'ef\'f0\'ee\'e1\'e5\'eb\'ee\'e2 \'ef\'f0\'e8 \'ef\'e5\'f0\'e5\'f5\'ee\'e4\'e5 \'ea \'f1\'eb\'e5\'e4\'f3\'fe\'f9\'e5\'e9 \'f2\'e0\'e1\'f3\'eb\'ff\'f6\'e8\'e8*/
\par                    }{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 spaces= 8- (len % 8);
\par                    len += spaces; /* }{\insrsid3086045\charrsid3086045 \'e2\'ea\'eb\'fe\'f7\'e0\'ff}{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817  }{\insrsid3086045\charrsid3086045 \'ef\'ee\'e7\'e8\'f6\'e8\'fe}{
\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817  }{\insrsid3086045\charrsid3086045 \'f2\'e0\'e1\'f3\'eb\'ff\'f6\'e8\'e8}{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817   */
\par                    while(spaces) \{
\par                      print(" ");
\par                      spaces--;
\par                    \}
\par                  \}
\par                  else if(*token==','); /* }{\insrsid3086045\charrsid3086045 \'ed\'e8\'f7\'e5\'e3\'ee}{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817  }{\insrsid3086045\charrsid3086045 \'ed\'e5}{
\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817  }{\insrsid3086045\charrsid3086045 \'e4\'e5\'eb\'e0\'f2\'fc}{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817  */
\par                  else if(tok!=EOL && tok!=FINISHED)  serror(0);
\par                \} while (*token == ';' || *token == ',');
\par 
\par               if(tok==EOL || tok==FINISHED) \{
\par               if(last_delim != ';' && last_delim != }{\insrsid3086045\charrsid3086045 ',') printf("\\n");
\par               \}
\par                else serror(0); /* \'ee\'f2\'f1\'f3\'f2\'f1\'f2\'e2\'f3\'e5\'f2 ',' \'e8\'eb\'e8 ';'  */
\par              \}
\par              /* \'cf\'ee\'e8\'f1\'ea \'e2\'f1\'e5\'f5 \'ec\'e5\'f2\'ee\'ea */
\par              void scan_labels()
\par              }{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 \{
\par                int addr;
\par                char *temp;
\par 
\par              label_init();  /* }{\insrsid3086045\charrsid3086045 \'ee\'e1\'ed\'f3\'eb\'e5\'ed\'e8\'e5}{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817  }{\insrsid3086045\charrsid3086045 \'e2\'f1\'e5\'f5}{
\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817  }{\insrsid3086045\charrsid3086045 \'ec\'e5\'f2\'ee\'ea}{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817  */
\par              }{\insrsid3086045\charrsid3086045 temp = prog; /* \'f1\'ee\'f5\'f0\'e0\'ed\'e8\'ec \'f3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'fc \'ed\'e0 \'ed\'e0\'f7\'e0\'eb\'ee \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'fb*/
\par                /* \'c5\'f1\'eb\'e8 \'ef\'e5\'f0\'e2\'e0\'ff \'eb\'e5\'ea\'f1\'e5\'ec\'e0 \'f4\'e0\'e9\'eb\'e0 \'e5\'f1\'f2\'fc \'ec\'e5\'f2\'ea\'e0  */
\par                }{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 get_token();
\par                if(token_type==NUMBER) \{
\par                  strcpy(label_table[0].name,token);
\par                  label_table[0].p=prog;
\par                \}
\par 
\par                find_eol();
\par                do \{
\par                  get_token();
\par                  if(token_type==NUMBER) \{
\par                    addr =get_next_label(token);
\par                    if(addr==-1 || addr==-2) \{
\par                        (addr==-1) ?serror(5):serror(6);
\par                    \}
\par                    strcpy(label_table[addr].name, token);
\par          }{\insrsid3086045\charrsid3086045 label_table[addr].p = prog; /* \'f2\'e5\'ea\'f3\'f9\'e8\'e9 \'f3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'fc \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'fb */
\par                  \}
\par                  /* \'e5\'f1\'eb\'e8 \'f1\'f2\'f0\'ee\'ea\'e0 \'ed\'e5 \'ef\'ee\'ec\'e5\'f7\'e5\'ed\'e0, \'f2\'ee \'ef\'ee\'e8\'f1\'ea \'f1\'eb\'e5\'e4\'f3\'fe\'f9\'e5\'e9 */
\par                  }{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 if(tok!=EOL) find_eol();
\par                \} while(tok!=FINISHED);
\par                prog = temp; /* }{\insrsid3086045\charrsid3086045 \'f1\'ee\'f5\'f0\'e0\'ed\'e8\'ec}{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817  }{\insrsid3086045\charrsid3086045 \'ee\'f0\'e8\'e3\'e8\'ed\'e0\'eb}{
\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817  */
\par              }{\insrsid3086045\charrsid3086045 \}
\par 
\par              /* \'cf\'ee\'e8\'f1\'ea \'ed\'e0\'f7\'e0\'eb\'e0 \'f1\'eb\'e5\'e4\'f3\'fe\'f9\'e5\'e9 \'f1\'f2\'f0\'ee\'ea\'e8 */
\par              void find_eol()
\par              }{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 \{
\par                while(*prog!='\\n'  && *prog!='\\0') ++prog;
\par                }{\insrsid3086045\charrsid3086045 if(*prog) prog++;
\par              \}
\par 
\par              /* \'c2\'ee\'e7\'e2\'f0\'e0\'f9\'e0\'e5\'f2 \'e8\'ed\'e4\'e5\'ea\'f1 \'e5\'ed\'e0 \'f1\'eb\'e5\'e4\'f3\'fe\'f9\'f3\'fe \'f1\'e2\'ee\'e1\'ee\'e4\'ed\'f3\'fe \'ef\'ee\'e7\'e8\'f6\'e8\'fe
\par                 \'ec\'e0\'f1\'f1\'e8\'e2\'e0 \'ec\'e5\'f2\'ee\'ea. -1, \'e5\'f1\'eb\'e8 \'ec\'e0\'f1\'f1\'e8\'e2 \'ef\'e5\'f0\'e5\'ef\'ee\'eb\'ed\'e5\'ed.
\par                                -2, \'e5\'f1\'eb\'e8 \'e4\'f3\'e1\'eb\'e8\'f0\'ee\'e2\'e0\'ed\'e8\'e5 \'ec\'e5\'f2\'ee\'ea. */
\par 
\par              get_next_label(s)
\par              }{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 char *s;
\par              \{
\par                register int t;
\par 
\par                for(t=0;t<NUM_LAB;++t) \{
\par                  if(label_table[t].name[0]==0) return t;
\par               if(!strcmp(label_table[t].name,s)) return -2; /*}{\insrsid3086045\charrsid3086045 \'e4\'f3\'e1\'eb\'fc}{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 */
\par                }{\insrsid3086045\charrsid3086045 \}
\par 
\par                return -1;
\par              \}
\par 
\par          /* \'cf\'ee\'e8\'f1\'ea \'f1\'f2\'f0\'ee\'ea\'e8 \'ef\'ee \'e8\'e7\'e2\'e5\'f1\'f2\'ed\'ee\'e9 \'ec\'e5\'f2\'ea\'e5. \'c7\'ed\'e0\'f7\'e5\'ed\'e8\'e5 0 \'e2\'ee\'e7\'e2\'f0\'e0\'f9\'e0\'e5\'f2\'f1\'ff,
\par             \'e5\'f1\'eb\'e8 \'ec\'e5\'f2\'ea\'e0 \'ed\'e5 \'ed\'e0\'e9\'e4\'e5\'ed\'e0; \'e2 \'ef\'f0\'ee\'f2\'e8\'e2\'ed\'ee\'ec \'f1\'eb\'f3\'f7\'e0\'e5 \'e2\'ee\'e7\'e2\'f0\'e0\'f9\'e0\'e5\'f2\'f1\'ff
\par             \'f3\'ea\'e0\'e7\'e0\'f2\'e5\'eb\'fc \'ed\'e0 \'ef\'ee\'ec\'e5\'f7\'e5\'ed\'ed\'f3\'fe \'f1\'f2\'f0\'ee\'ea\'f3 \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'fb        */
\par 
\par              }{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 char *find_label(s)
\par 
\par              char *s;
\par              \{
\par                register int t;
\par 
\par                for(t=0; t<NUM_LAB; ++t)
\par            if(!strcmp(label_table[t].name,s)) return label_table[t].p;
\par                }{\insrsid3086045\charrsid3086045 return '\\0'; /* \'f1\'ee\'f1\'f2\'ee\'ff\'ed\'e8\'e5 \'ee\'f8\'e8\'e1\'ea\'e8 */
\par              \}
\par 
\par              /* \'d0\'e5\'e0\'eb\'e8\'e7\'e0\'f6\'e8\'ff \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'e0 GOTO */
\par              void exec_goto()
\par              \{
\par                char *loc;
\par 
\par                get_token(); /* \'ef\'ee\'eb\'f3\'f7\'e8\'f2\'fc \'ec\'e5\'f2\'ea\'f3 \'ef\'e5\'f0\'e5\'f5\'ee\'e4\'e0 */
\par                /* \'cf\'ee\'e8\'f1\'ea \'ec\'e5\'f1\'f2\'ee\'ef\'ee\'eb\'ee\'e6\'e5\'ed\'e8\'ff \'ec\'e5\'f2\'ea\'e8 */
\par                loc = find_label(token);
\par                if(loc=='\\0')
\par                  serror(7);   /* \'ec\'e5\'f2\'ea\'e0 \'ed\'e5 \'ee\'e1\'ed\'e0\'f0\'f3\'e6\'e5\'ed\'e0  */
\par                else prog=loc; /* \'f1\'f2\'e0\'f0\'f2 \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'fb \'f1 \'f3\'ea\'e0\'e7\'e0\'ed\'ed\'ee\'e9 \'f2\'ee\'f7\'ea\'e8  */
\par              \}
\par 
\par           /* \'c8\'ed\'e8\'f6\'e8\'e0\'eb\'e8\'e7\'e0\'f6\'e8\'ff \'ec\'e0\'f1\'f1\'e8\'e2\'e0 \'f5\'f0\'e0\'ed\'e5\'ed\'e8\'ff \'ec\'e5\'f2\'ee\'ea. \'cf\'ee \'e4\'ee\'e3\'ee\'e2\'ee\'f0\'e5\'ed\'ed\'ee\'f1\'f2\'e8
\par           \'ed\'f3\'eb\'e5\'e2\'ee\'e5 \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'e5 \'ec\'e5\'f2\'ea\'e8 \'f1\'e8\'ec\'e2\'ee\'eb\'e8\'e7\'e8\'f0\'f3\'e5\'f2 \'ef\'f3\'f1\'f2\'f3\'fe \'ff\'f7\'e5\'e9\'ea\'f3 \'ec\'e0\'f1\'f1\'e8\'e2\'e0 */
\par              }{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 void label_init()
\par              \{
\par              register int t;
\par 
\par              for(t=0; t<NUM_LAB; ++t) label_table[t].name[0]='\\0';
\par            }{\insrsid3086045\charrsid3086045 \}
\par 
\par              /* \'d0\'e5\'e0\'eb\'e8\'e7\'e0\'f6\'e8\'ff \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'e0 IF  */
\par              void exec_if()
\par              }{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 \{
\par                int x , y, cond;
\par                char op;
\par                }{\insrsid3086045\charrsid3086045 get_exp(&x); /* \'ef\'ee\'eb\'f3\'f7\'e8\'f2\'fc \'eb\'e5\'e2\'ee\'e5 \'e2\'fb\'f0\'e0\'e6\'e5\'ed\'e8\'e5 */
\par                get_token(); /* \'ef\'ee\'eb\'f3\'f7\'e8\'f2\'fc \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0 */
\par                if(!strchr("=<>", *token)) \{
\par                serror(0);      /* \'ed\'e5\'e4\'ee\'ef\'f3\'f1\'f2\'e8\'ec\'fb\'e9 \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0 */
\par                return;
\par              \}
\par              op=*token;
\par              get_exp(&y);  /* \'ef\'ee\'eb\'f3\'f7\'e8\'f2\'fc \'ef\'f0\'e0\'e2\'ee\'e5 \'e2\'fb\'f0\'e0\'e6\'e5\'ed\'e8\'e5 */
\par              /* \'ce\'ef\'f0\'e5\'e4\'e5\'eb\'e5\'ed\'e8\'e5 \'f0\'e5\'e7\'f3\'eb\'fc\'f2\'e0\'f2\'e0 */
\par              cond=0;
\par              switch(op) \{
\par                  }{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 case '=':
\par                if(x==y) cond=1;
\par                break;
\par                  case '<':
\par                if(x<y) cond=1;
\par                break;
\par                  case '>':
\par                if(x>y) cond=1;
\par                }{\insrsid3086045\charrsid3086045 break;
\par              \}
\par              if(cond) \{  /* \'e5\'f1\'eb\'e8 \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'e5 IF "\'e8\'f1\'f2\'e8\'ed\'e0"  */
\par                }{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 get_token();
\par                if(tok!=THEN) \{
\par                   }{\insrsid3086045\charrsid3086045 serror(8);
\par                   return;
\par               \} /* \'e8\'ed\'e0\'f7\'e5, \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'e0 \'e2\'fb\'ef\'ee\'eb\'ed\'ff\'e5\'f2\'f1\'ff \'f1\'ee \'f1\'eb\'e5\'e4\'f3\'fe\'f9\'e5\'e9 \'f1\'f2\'f0\'ee\'ea\'e8 */
\par              \}
\par              else find_eol(); /* \'ef\'ee\'e8\'f1\'ea \'f2\'ee\'f7\'ea\'e8 \'f1\'f2\'e0\'f0\'f2\'e0 \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'fb */
\par            }{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 \}
\par 
\par            /* }{\insrsid3086045\charrsid3086045 \'d0\'e5\'e0\'eb\'e8\'e7\'e0\'f6\'e8\'ff}{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817  }{\insrsid3086045\charrsid3086045 \'f6\'e8\'ea\'eb\'e0}{
\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817  FOR */
\par            void exec_for()
\par            \{
\par              struct for_stack i;
\par              }{\insrsid3086045\charrsid3086045 int value;
\par 
\par              get_token(); /* \'ef\'ee\'eb\'f3\'f7\'e8\'f2\'fc \'f3\'ef\'f0\'e0\'e2\'eb\'ff\'fe\'f9\'f3\'fe \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'f3\'fe }{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 */
\par              if(!isalpha(*token)); \{
\par                serror(4);
\par                return;
\par              }{\insrsid3086045\charrsid3086045 \}
\par              i.var=toupper(*token)-'A'; /* \'f1\'ee\'f5\'f0\'e0\'ed\'e8\'f2\'fc \'e5\'e5 \'e8\'ed\'e4\'e5\'ea\'f1 */
\par              get_token(); /* \'ef\'ee\'eb\'f3\'f7\'e8\'f2\'fc \'e7\'ed\'e0\'ea \'f0\'e0\'e2\'e5\'ed\'f1\'f2\'e2\'e0 */
\par              }{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 if(*token!='=') \{
\par                serror(3);
\par                }{\insrsid3086045\charrsid3086045 return;
\par              \}
\par              get_exp(&value); /* \'ef\'ee\'eb\'f3\'f7\'e8\'f2\'fc \'ed\'e0\'f7\'e0\'eb\'fc\'ed\'ee\'e5 \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'e5  */
\par              }{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 variables[i.var]=value;
\par 
\par              get_token();
\par              if(tok!=TO) serror(9); /* }{\insrsid3086045\charrsid3086045 \'e5\'f1\'eb\'e8}{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817  }{\insrsid3086045\charrsid3086045 \'ed\'e5\'e5}{
\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817  }{\insrsid3086045\charrsid3086045 \'ed\'e0\'f8\'eb\'e8}{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817  TO */
\par              }{\insrsid3086045\charrsid3086045 get_exp(&i.target); /* \'ef\'ee\'eb\'f3\'f7\'e8\'f2\'fc \'ea\'ee\'ed\'e5\'f7\'ed\'ee\'e5 \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'e5 */
\par 
\par              /* \'c5\'f1\'eb\'e8 \'f6\'e8\'ea\'eb \'e2\'fb\'ef\'ee\'eb\'ed\'ff\'e5\'f2\'f1\'ff \'ef\'ee\'f1\'eb\'e5\'e4\'ed\'e8\'e9 \'f0\'e0\'e7, \'ef\'ee\'ec\'e5\'f1\'f2\'e8\'f2\'fc
\par                 \'e8\'ed\'f4\'ee\'f0\'ec\'e0\'f6\'e8\'fe \'e2 \'f1\'f2\'e5\'ea  */
\par              if(value>=variables[i.var]) \{
\par                }{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 i.loc = prog;
\par                fpush(i);
\par              \}
\par              else /* }{\insrsid3086045\charrsid3086045 \'ef\'f0\'ee\'ef\'f3\'f1\'f2\'e8\'f2\'fc}{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817  }{\insrsid3086045\charrsid3086045 \'e2\'e5\'f1\'fc}{
\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817  }{\insrsid3086045\charrsid3086045 \'f6\'e8\'ea\'eb}{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817  */
\par                while(tok!=NEXT) get_token();
\par            }{\insrsid3086045\charrsid3086045 \}
\par 
\par            /* \'d0\'e5\'e0\'eb\'e8\'e7\'e0\'f6\'e8\'ff \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'e0 NEXT */
\par            void next()
\par            \{
\par              struct for_stack i;
\par              i = fpop(); /* \'f7\'f2\'e5\'ed\'e8\'e5 \'e8\'ed\'f4\'ee\'f0\'ec\'e0\'f6\'e8\'e8 \'ee \'f6\'e8\'ea\'eb\'e5 */
\par 
\par             variables[i.var]++; /* \'f3\'e2\'e5\'eb\'e8\'f7\'e5\'ed\'e8\'e5 \'f3\'ef\'f0\'e0\'e2\'eb\'ff\'fe\'f9\'e5\'e9 \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'ee\'e9*/
\par              }{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 if(variables[i.var]>i.target) return; /* }{\insrsid3086045\charrsid3086045 \'ea\'ee\'ed\'e5\'f6}{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817  }{
\insrsid3086045\charrsid3086045 \'f6\'e8\'ea\'eb\'e0}{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817  */
\par              }{\insrsid3086045\charrsid3086045 fpush(i); /* \'e8\'ed\'e0\'f7\'e5, \'f1\'ee\'f5\'f0\'e0\'ed\'e8\'f2\'fc \'e8\'ed\'f4\'ee\'f0\'ec\'e0\'f6\'e8\'fe \'e2 \'f1\'f2\'e5\'ea\'e5 */
\par              prog = i.loc; /* \'f6\'e8\'ea\'eb */
\par            \}
\par 
\par            /* \'cf\'ee\'ec\'e5\'f1\'f2\'e8\'f2\'fc \'e8\'ed\'f4\'ee\'f0\'ec\'e0\'f6\'e8\'fe \'e2 \'f1\'f2\'e5\'ea FOR */
\par            }{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 void fpush(i)
\par            struct for_stack i;
\par            \{
\par              if(ftos>FOR_NEST)
\par              serror(10);
\par            fstack[ftos]=i;
\par            ftos++;
\par          \}
\par 
\par          struct for_stack fpop()
\par          \{
\par            ftos--;
\par            if(ftos<0) serror(11);
\par            return(fstack[ftos]);
\par          }{\insrsid3086045\charrsid3086045 \}
\par 
\par          /* \'d0\'e5\'e0\'eb\'e8\'e7\'e0\'f6\'e8\'ff \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'e0 INPUT */
\par          void input()
\par          }{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 \{
\par            char str[80], var;
\par            int i;
\par 
\par       }{\insrsid3086045\charrsid3086045 get_token(); /*\'ef\'f0\'ee\'f1\'ec\'e0\'f2\'f0\'e8\'e2\'e0\'e5\'f2\'f1\'ff \'e5\'f1\'eb\'e8 \'f1\'f3\'f9\'e5\'f1\'f2\'e2\'f3\'e5\'f2 \'f1\'f2\'f0\'ee\'ea\'e0 \'f1\'e8\'ec\'e2\'ee\'eb\'ee\'e2*/
\par            if(token_type==QUOTE) \{
\par           printf(token); /* \'e5\'f1\'eb\'e8 \'e4\'e0, \'f2\'ee \'e5\'e5 \'ef\'e5\'f7\'e0\'f2\'fc \'e8 \'ea\'ee\'ed\'f2\'f0\'ee\'eb\'fc ',' */
\par              }{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 get_token();
\par              if(*token!=',') serror(1);
\par              }{\insrsid3086045\charrsid3086045 get_token();
\par            \}
\par            else printf("? "); /* \'e2\'fb\'e4\'e0\'f7\'e0 \'f1\'f2\'f0\'ee\'ea\'e8 \'ef\'ee \'f3\'ec\'ee\'eb\'f7\'e0\'ed\'e8\'fe */
\par        var = toupper(*token)-'A'; /* \'ef\'ee\'eb\'f3\'f7\'e8\'f2\'fc \'e8\'ed\'e4\'e5\'ea\'f1 \'e8\'ec\'e5\'ed\'e8 \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'ee\'e9*/
\par            scanf("%d",&i);   /* \'f7\'f2\'e5\'ed\'e8\'e5 \'e2\'e2\'ee\'e4\'e0 \'e4\'e0\'ed\'ed\'fb\'f5 */
\par            variables[var] = i;  /* \'f1\'ee\'f5\'f0\'e0\'ed\'e5\'ed\'e8\'e5 \'e4\'e0\'ed\'ed\'fb\'f5 */
\par          \}
\par 
\par          /* \'d0\'e5\'e0\'eb\'e8\'e7\'e0\'f6\'e8\'ff \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'e0 GOSUB */
\par          void gosub()
\par          }{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 \{
\par            char *loc;
\par 
\par            get_token();
\par            /* }{\insrsid3086045\charrsid3086045 \'ef\'ee\'e8\'f1\'ea}{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817  }{\insrsid3086045\charrsid3086045 \'ec\'e5\'f2\'ea\'e8}{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817  }
{\insrsid3086045\charrsid3086045 \'e2\'fb\'e7\'ee\'e2\'e0}{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817  */
\par            loc = find_label(token);
\par            }{\insrsid3086045\charrsid3086045 if(loc=='\\0')
\par              serror(7); /* \'ec\'e5\'f2\'ea\'e0 \'ed\'e5 \'ee\'ef\'f0\'e5\'e4\'e5\'eb\'e5\'ed\'e0 */
\par            else \{
\par              gpush(prog); /* \'e7\'e0\'ef\'ee\'ec\'ed\'e8\'ec \'ec\'e5\'f1\'f2\'ee, \'ea\'f3\'e4\'e0 \'e2\'e5\'f0\'ed\'e5\'ec\'f1\'ff */
\par              prog = loc; /* \'f1\'f2\'e0\'f0\'f2 \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'fb \'f1 \'f3\'ea\'e0\'e7\'e0\'ed\'ed\'ee\'e9 \'f2\'ee\'f7\'ea\'e8 */
\par            \}
\par          \}
\par 
\par          /* \'c2\'ee\'e7\'e2\'f0\'e0\'f2 \'e8\'e7 \'ef\'ee\'e4\'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'fb, \'e2\'fb\'e7\'e2\'fb\'ed\'ed\'ee\'e9 \'ef\'ee GOSUB */
\par          void greturn()
\par          \{
\par            prog = gpop();
\par          \}
\par 
\par          /* \'cf\'ee\'ec\'e5\'f9\'e0\'e5\'f2 \'e4\'e0\'ed\'ed\'fb\'e5 \'e2 \'f1\'f2\'e5\'ea GOSUB */
\par          }{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 void gpush(s)
\par          char *s;
\par          \{
\par            gtos++;
\par            if(gtos==SUB_NEST) \{
\par              serror(12);
\par              return;
\par            \}
\par            gstack[gtos]=s;
\par          \}
\par 
\par          /*   */
\par          char *gpop()
\par          \{
\par            if(gtos==0) \{
\par              serror(13);
\par              return;
\par            \}
\par            return(gstack[gtos--]);
\par          }{\insrsid3086045\charrsid3086045 \}
\par 
\par 
\par 
\par               \'cf\'d0\'c8\'cc\'c5\'d0 \'c8\'d1\'cf\'ce\'cb\'dc\'c7\'ce\'c2\'c0\'cd\'c8\'df \'c8\'cd\'d2\'c5\'d0\'cf\'d0\'c5\'d2\'c0\'d2\'ce\'d0\'c0  SMALL BASIC
\par      -----------------------------------------------------------------
\par 
\par           \'d2\'e5\'ef\'e5\'f0\'fc \'e2\'fb  \'ec\'ee\'e6\'e5\'f2\'e5  \'e7\'e0\'ef\'f3\'f1\'ea\'e0\'f2\'fc   \'ef\'f0\'ee\'f1\'f2\'e5\'e9\'f8\'e8\'e5   BASIC-\'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'fb.
\par 
\par 
\par          PRINT "\'dd\'f2\'e0 \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'e0 \'e4\'e5\'ec\'ee\'ed\'f1\'f2\'f0\'e8\'f0\'f3\'e5\'f2 \'e2\'f1\'e5 \'ea\'ee\'ec\'e0\'ed\'e4\'fb."
\par          }{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 FOR X = 1 TO 100
\par          PRINT X, X/2; X, X*X
\par          NEXT
\par          GOSUB 300
\par          PRINT "}{\insrsid3086045\charrsid3086045 \'cf\'f0\'e8\'e2\'e5\'f2}{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 "
\par          INPUT H
\par          IF H<11 THEN GOTO 200
\par          PRINT 12-4/2
\par          PRINT 100
\par          200 A = 100/2
\par          IF A>10 THEN PRINT "}{\insrsid3086045\charrsid3086045 \'c2\'f1\'e5}{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817  }{\insrsid3086045\charrsid3086045 \'ed\'ee\'f0\'ec\'e0\'eb\'fc\'ed\'ee}{
\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 "
\par          PRINT A
\par          PRINT A+34
\par          INPUT H
\par          PRINT H
\par          INPUT "}{\insrsid3086045\charrsid3086045 \'dd\'f2\'ee}{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817  }{\insrsid3086045\charrsid3086045 \'f2\'e5\'f1\'f2}{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 ",y
\par          PRINT H+Y
\par          END
\par          300 PRINT "}{\insrsid3086045\charrsid3086045 \'dd\'f2\'ee}{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817  }{\insrsid3086045\charrsid3086045 \'ef\'ee\'e4\'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'e0}{
\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 "
\par              RETURN
\par 
\par 
\par 
\par          }{\insrsid3086045\charrsid3086045 PRINT "\'dd\'f2\'e0 \'ef\'ee\'e4\'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'e0 \'e4\'e5\'ec\'ee\'ed\'f1\'f2\'f0\'e8\'f0\'f3\'e5\'f2 \'e2\'eb\'ee\'e6\'e5\'ed\'ed\'fb\'e9 GOSUB"
\par          INPUT "\'c2\'e2\'e5\'e4\'e8\'f2\'e5 \'f7\'e8\'f1\'eb\'ee: ", i
\par          GOSUB 100
\par 
\par          }{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 END
\par 
\par          100 FOR T = 1 TO I
\par            X = X+I
\par            GOSUB 150
\par          NEXT
\par          }{\insrsid3086045\charrsid3086045 RETURN
\par 
\par          150 PRINT X;
\par              RETURN
\par 
\par 
\par          print "\'dd\'f2\'e0 \'ef\'ee\'e4\'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'e0 \'e2\'fb\'f7\'e8\'f1\'eb\'ff\'e5\'f2 \'ee\'e1\'fa\'e5\'ec \'ea\'f3\'e1\'e0 "
\par          input "\'c2\'e2\'e5\'e4\'e8\'f2\'e5 \'e4\'eb\'e8\'ed\'f3 \'ef\'e0\'f0\'e2\'ee\'e9 \'f1\'f2\'ee\'f0\'ee\'ed\'fb: ", l
\par          input "\'c2\'e2\'e5\'e4\'e8\'f2\'e5 \'e4\'eb\'e8\'ed\'f3 \'e2\'f2\'ee\'f0\'ee\'e9 \'f1\'f2\'ee\'f0\'ee\'ed\'fb: ", w
\par          input "\'c2\'e2\'e5\'e4\'e8\'f2\'e5 \'e4\'eb\'e8\'ed\'f3 \'f2\'f0\'e5\'f2\'e5\'e9 \'f1\'f2\'ee\'f0\'ee\'ed\'fb: ", d
\par          t = l * w * d
\par          print "\'ce\'e1\'fc\'e5\'ec \'f0\'e0\'e2\'e5\'ed: ", t
\par 
\par 
\par          PRINT "\'dd\'f2\'e0 \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'e0 \'e4\'e5\'ec\'ee\'ed\'f1\'f2\'f0\'e8\'f0\'f3\'e5\'f2 \'e2\'eb\'ee\'e6\'e5\'ed\'ed\'fb\'e5 \'f6\'e8\'ea\'eb\'fb"
\par          }{\lang1033\langfe1049\langnp1033\insrsid3086045\charrsid3869817 FOR X = 1 TO 100
\par           FOR Y = 1 TO 10
\par             PRINT X; Y; X*Y
\par           NEXT
\par          }{\insrsid3086045\charrsid3086045 NEXT
\par 
\par 
\par 
\par                   \'d0\'c0\'d1\'d8\'c8\'d0\'c5\'cd\'c5\'c8\'c5 \'c2\'ce\'c7\'cc\'ce\'c6\'cd\'ce\'d1\'d2\'c5\'c9 \'c8\'cd\'d2\'c5\'d0\'cf\'d0\'c5\'d2\'c0\'d2\'ce\'d0\'c0
\par      -----------------------------------------------------------------
\par 
\par           \'ce\'f1\'ed\'ee\'e2\'ed\'fb\'ec \'ef\'f3\'ed\'ea\'f2\'ee\'ec  \'f0\'e0\'f1\'f8\'e8\'f0\'e5\'ed\'e8\'ff  \'f4\'f3\'ed\'ea\'f6\'e8\'e9  \'e8\'ed\'f2\'e5\'f0\'ef\'f0\'e5\'f2\'e0\'f2\'ee\'f0\'e0  \'e8  \'e8\'f5
\par      \'ec\'ee\'e4\'e8\'f4\'e8\'ea\'e0\'f6\'e8\'e8  \'ff\'e2\'eb\'ff\'e5\'f2\'f1\'ff  \'ee\'e3\'f0\'e0\'ed\'e8\'f7\'e5\'ed\'ed\'ee\'f1\'f2\'fc   \'e5\'e3\'ee   \'eb\'e8\'f8\'fc   \'e2\'ee\'e7\'ec\'ee\'e6\'ed\'ee\'f1\'f2\'fc\'fe
\par      \'e8\'ed\'f2\'e5\'f0\'ef\'f0\'e5\'f2\'e8\'f0\'ee\'e2\'e0\'f2\'fc \'ff\'e7\'fb\'ea BASIC.  \'ce\'f1\'ed\'ee\'e2\'ed\'e0\'ff \'ec\'e0\'f1\'f1\'e0 \'f2\'e5\'f5\'ed\'e8\'f7\'e5\'f1\'ea\'e8\'f5 \'ef\'f0\'e8\'e5\'ec\'ee\'e2,
\par      \'ee\'ef\'e8\'f1\'e0\'ed\'ed\'fb\'f5  \'e2  \'fd\'f2\'ee\'e9  \'e3\'eb\'e0\'e2\'e5,  \'ec\'ee\'e6\'e5\'f2  \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'f2\'f1\'ff   \'ef\'f0\'e8   \'f1\'ee\'e7\'e4\'e0\'ed\'e8\'e8
\par      \'e8\'ed\'f2\'e5\'f0\'ef\'f0\'e5\'f2\'e0\'f2\'ee\'f0\'ee\'e2      \'e4\'eb\'ff     \'f0\'e0\'e7\'eb\'e8\'f7\'ed\'fb\'f5     \'ef\'f0\'ee\'f6\'e5\'e4\'f3\'f0\'ed\'fb\'f5     \'ff\'e7\'fb\'ea\'ee\'e2
\par      \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'e8\'f0\'ee\'e2\'e0\'ed\'e8\'ff.  \'cf\'ee\'f2\'ee\'ec\'f3 \'e2\'fb, \'e2 \'ef\'f0\'e8\'ed\'f6\'e8\'ef\'e5, \'ec\'ee\'e6\'e5\'f2\'e5 \'f0\'e0\'e7\'f0\'e0\'e1\'ee\'f2\'e0\'f2\'fc \'f1\'e2\'ee\'e9
\par      \'ff\'e7\'fb\'ea,  \'f3\'f7\'e8\'f2\'fb\'e2\'e0\'fe\'f9\'e8\'e9  \'e2\'e0\'f8  \'e2\'e7\'e3\'eb\'ff\'e4  \'ed\'e0  \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'e8\'f0\'ee\'e2\'e0\'ed\'e8\'e5 \'e8 \'e2\'e0\'f8 \'f1\'f2\'e8\'eb\'fc
\par      \'ef\'f0\'ee\'e3\'f0\'e0\'ec\'ec\'e8\'f0\'ee\'e2\'e0\'ed\'e8\'ff.
\par 
\par           \'c4\'ee\'ef\'ee\'eb\'ed\'e8\'f2\'e5\'eb\'fc\'ed\'fb\'e5 \'ea\'ee\'ec\'e0\'ed\'e4\'fb \'e8 \'f1\'ee\'ee\'f2\'e2\'e5\'f2\'f1\'f2\'e2\'f3\'fe\'f8\'e8\'e5 \'e8\'ec \'ee\'f1\'ed\'ee\'e2\'ed\'fb\'e5 \'f4\'ee\'f0\'ec\'e0\'f2\'fb
\par      \'eb\'e5\'ea\'f1\'e5\'ec   \'ee\'ef\'e8\'f1\'e0\'ed\'fb   \'e2  \'fd\'f2\'ee\'e9  \'e3\'eb\'e0\'e2\'e5.  \'c4\'eb\'ff  \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'ed\'e8\'ff  \'f0\'e0\'e7\'eb\'e8\'f7\'ed\'fb\'f5
\par 
\par      \'e4\'ee\'ef\'ee\'eb\'ed\'e8\'f2\'e5\'eb\'fc\'ed\'fb\'f5 \'f2\'e8\'ef\'ee\'e2 \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'fb\'f5 \'e2\'fb  \'e4\'ee\'eb\'e6\'ed\'fb  \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'f2\'fc  \'ec\'e0\'f1\'f1\'e8\'e2\'fb
\par      \'f1\'f2\'f0\'f3\'ea\'f2\'f3\'f0  \'e4\'eb\'ff  \'f5\'f0\'e0\'ed\'e5\'ed\'e8\'ff  \'f2\'e0\'ea\'e8\'f5  \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'fb\'f5;  \'ee\'e4\'ed\'ee  \'e8\'e7  \'ef\'ee\'eb\'e5\'e9 \'fd\'f2\'ee\'e9
\par      \'f1\'f2\'f0\'f3\'ea\'f2\'f3\'f0\'fb \'e4\'ee\'eb\'e6\'ed\'ee \'e8\'ed\'e4\'e8\'f6\'e8\'f0\'ee\'e2\'e0\'f2\'fc \'f2\'e8\'ef \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'ee\'e9,  \'e0  \'ee\'f1\'f2\'e0\'eb\'fc\'ed\'fb\'e5  \'ef\'ee\'eb\'ff
\par      \'ef\'f0\'e5\'e4\'ed\'e0\'e7\'ed\'e0\'f7\'e5\'ed\'fb   \'e4\'eb\'ff   \'f5\'f0\'e0\'ed\'e5\'ed\'e8\'ff   \'e7\'ed\'e0\'f7\'e5\'ed\'e8\'e9  \'fd\'f2\'e8\'f5  \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'fb\'f5.  \'c4\'eb\'ff
\par      \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'ed\'e8\'ff  \'f1\'f2\'f0\'ee\'f7\'ed\'fb\'f5  \'ef\'e5\'f0\'e5\'ec\'e5\'ed\'ed\'fb\'f5  \'e2\'e0\'ec  \'ed\'e5\'ee\'e1\'f5\'ee\'e4\'e8\'ec\'ee   \'f3\'f1\'f2\'e0\'ed\'ee\'e2\'e8\'f2\'fc
\par      \'f2\'e0\'e1\'eb\'e8\'f6\'f3  \'f1\'f2\'f0\'ee\'ea.  \'cf\'f0\'ee\'f1\'f2\'e5\'e9\'f8\'e8\'ec  \'ef\'f3\'f2\'e5\'ec \'f0\'e5\'e0\'eb\'e8\'e7\'e0\'f6\'e8\'e8 \'f1\'f2\'f0\'ee\'ea \'f4\'e8\'ea\'f1\'e8\'f0\'ee\'e2\'e0\'ed\'ed\'ee\'e9
\par      \'e4\'eb\'e8\'ed\'fb \'ff\'e2\'eb\'ff\'e5\'f2\'f1\'ff \'e8\'f1\'ef\'ee\'eb\'fc\'e7\'ee\'e2\'e0\'ed\'e8\'e5 \'f4\'e8\'ea\'f1\'e8\'f0\'ee\'e2\'e0\'ed\'ed\'fb\'f5 \'f3\'f7\'e0\'f1\'f2\'ea\'ee\'e2 \'ef\'e0\'ec\'ff\'f2\'e8  \'e2 255
\par      \'e1\'e0\'e9\'f2 \'e4\'eb\'ff \'f0\'e0\'e7\'ec\'e5\'f8\'e5\'ed\'e8\'ff \'f1\'f2\'f0\'ee\'ea.
\par 
\par           \'c8 \'ef\'ee\'f1\'eb\'e5\'e4\'ed\'ff\'ff   \'ec\'fb\'f1\'eb\'fc:  \'f2\'e8\'ef\'fb  \'ee\'ef\'e5\'f0\'e0\'f2\'ee\'f0\'ee\'e2,  \'ea\'ee\'f2\'ee\'f0\'fb\'e5  \'e2\'fb  \'ec\'ee\'e6\'e5\'f2\'e5
\par      \'e8\'ed\'f2\'e5\'f0\'ef\'f0\'e5\'f2\'e8\'f0\'ee\'e2\'e0\'f2\'fc, \'ee\'e3\'f0\'e0\'ed\'e8\'f7\'e5\'ed\'fb \'eb\'e8\'f8\'fc \'e2\'e0\'f8\'e5\'e9 \'f4\'e0\'ed\'f2\'e0\'e7\'e8\'e5\'e9.
\par }{\insrsid3086045 
\par }}